// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protocol/RemoteProtocol.proto

package akka.mobile.protocol;

public final class RemoteProtocol {
  private RemoteProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public enum CommandType
      implements com.google.protobuf.Internal.EnumLite {
    SHUTDOWN(0, 1),
    ;
    
    public static final int SHUTDOWN_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static CommandType valueOf(int value) {
      switch (value) {
        case 1: return SHUTDOWN;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
            public CommandType findValueByNumber(int number) {
              return CommandType.valueOf(number);
            }
          };
    
    private final int value;
    
    private CommandType(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:CommandType)
  }
  
  public enum ActorType
      implements com.google.protobuf.Internal.EnumLite {
    SCALA_ACTOR(0, 1),
    JAVA_ACTOR(1, 2),
    TYPED_ACTOR(2, 3),
    ;
    
    public static final int SCALA_ACTOR_VALUE = 1;
    public static final int JAVA_ACTOR_VALUE = 2;
    public static final int TYPED_ACTOR_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static ActorType valueOf(int value) {
      switch (value) {
        case 1: return SCALA_ACTOR;
        case 2: return JAVA_ACTOR;
        case 3: return TYPED_ACTOR;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ActorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ActorType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActorType>() {
            public ActorType findValueByNumber(int number) {
              return ActorType.valueOf(number);
            }
          };
    
    private final int value;
    
    private ActorType(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ActorType)
  }
  
  public enum SerializationSchemeType
      implements com.google.protobuf.Internal.EnumLite {
    JAVA(0, 1),
    SBINARY(1, 2),
    SCALA_JSON(2, 3),
    JAVA_JSON(3, 4),
    PROTOBUF(4, 5),
    ;
    
    public static final int JAVA_VALUE = 1;
    public static final int SBINARY_VALUE = 2;
    public static final int SCALA_JSON_VALUE = 3;
    public static final int JAVA_JSON_VALUE = 4;
    public static final int PROTOBUF_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static SerializationSchemeType valueOf(int value) {
      switch (value) {
        case 1: return JAVA;
        case 2: return SBINARY;
        case 3: return SCALA_JSON;
        case 4: return JAVA_JSON;
        case 5: return PROTOBUF;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>() {
            public SerializationSchemeType findValueByNumber(int number) {
              return SerializationSchemeType.valueOf(number);
            }
          };
    
    private final int value;
    
    private SerializationSchemeType(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:SerializationSchemeType)
  }
  
  public enum LifeCycleType
      implements com.google.protobuf.Internal.EnumLite {
    PERMANENT(0, 1),
    TEMPORARY(1, 2),
    ;
    
    public static final int PERMANENT_VALUE = 1;
    public static final int TEMPORARY_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static LifeCycleType valueOf(int value) {
      switch (value) {
        case 1: return PERMANENT;
        case 2: return TEMPORARY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>() {
            public LifeCycleType findValueByNumber(int number) {
              return LifeCycleType.valueOf(number);
            }
          };
    
    private final int value;
    
    private LifeCycleType(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:LifeCycleType)
  }
  
  public interface AkkaRemoteProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .RemoteMessageProtocol message = 1;
    boolean hasMessage();
    akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getMessage();
    
    // optional .RemoteControlProtocol instruction = 2;
    boolean hasInstruction();
    akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol getInstruction();
  }
  public static final class AkkaRemoteProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements AkkaRemoteProtocolOrBuilder {
    // Use AkkaRemoteProtocol.newBuilder() to construct.
    private AkkaRemoteProtocol(Builder builder) {
      super(builder);
    }
    private AkkaRemoteProtocol(boolean noInit) {}
    
    private static final AkkaRemoteProtocol defaultInstance;
    public static AkkaRemoteProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public AkkaRemoteProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional .RemoteMessageProtocol message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getMessage() {
      return message_;
    }
    
    // optional .RemoteControlProtocol instruction = 2;
    public static final int INSTRUCTION_FIELD_NUMBER = 2;
    private akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol instruction_;
    public boolean hasInstruction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol getInstruction() {
      return instruction_;
    }
    
    private void initFields() {
      message_ = akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
      instruction_ = akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasMessage()) {
        if (!getMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInstruction()) {
        if (!getInstruction().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, message_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, instruction_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, message_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, instruction_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        instruction_ = akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol build() {
        akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol result = new akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.instruction_ = instruction_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.AkkaRemoteProtocol.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasInstruction()) {
          mergeInstruction(other.getInstruction());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasMessage()) {
          if (!getMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasInstruction()) {
          if (!getInstruction().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder();
              if (hasMessage()) {
                subBuilder.mergeFrom(getMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMessage(subBuilder.buildPartial());
              break;
            }
            case 18: {
              akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.newBuilder();
              if (hasInstruction()) {
                subBuilder.mergeFrom(getInstruction());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInstruction(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .RemoteMessageProtocol message = 1;
      private akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol message_ = akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getMessage() {
        return message_;
      }
      public Builder setMessage(akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setMessage(
          akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        message_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeMessage(akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            message_ != akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance()) {
          message_ =
            akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder(message_).mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearMessage() {
        message_ = akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // optional .RemoteControlProtocol instruction = 2;
      private akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol instruction_ = akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
      public boolean hasInstruction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol getInstruction() {
        return instruction_;
      }
      public Builder setInstruction(akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        instruction_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setInstruction(
          akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.Builder builderForValue) {
        instruction_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeInstruction(akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            instruction_ != akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance()) {
          instruction_ =
            akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.newBuilder(instruction_).mergeFrom(value).buildPartial();
        } else {
          instruction_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearInstruction() {
        instruction_ = akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AkkaRemoteProtocol)
    }
    
    static {
      defaultInstance = new AkkaRemoteProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AkkaRemoteProtocol)
  }
  
  public interface RemoteMessageProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .UuidProtocol uuid = 1;
    boolean hasUuid();
    akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid();
    
    // required .ActorInfoProtocol actorInfo = 2;
    boolean hasActorInfo();
    akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol getActorInfo();
    
    // required bool oneWay = 3;
    boolean hasOneWay();
    boolean getOneWay();
    
    // optional .MessageProtocol message = 4;
    boolean hasMessage();
    akka.mobile.protocol.RemoteProtocol.MessageProtocol getMessage();
    
    // optional .ExceptionProtocol exception = 5;
    boolean hasException();
    akka.mobile.protocol.RemoteProtocol.ExceptionProtocol getException();
    
    // optional .UuidProtocol supervisorUuid = 6;
    boolean hasSupervisorUuid();
    akka.mobile.protocol.RemoteProtocol.UuidProtocol getSupervisorUuid();
    
    // optional .RemoteActorRefProtocol sender = 7;
    boolean hasSender();
    akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getSender();
    
    // repeated .MetadataEntryProtocol metadata = 8;
    java.util.List<akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol> 
        getMetadataList();
    akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol getMetadata(int index);
    int getMetadataCount();
    
    // optional string cookie = 9;
    boolean hasCookie();
    String getCookie();
  }
  public static final class RemoteMessageProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements RemoteMessageProtocolOrBuilder {
    // Use RemoteMessageProtocol.newBuilder() to construct.
    private RemoteMessageProtocol(Builder builder) {
      super(builder);
    }
    private RemoteMessageProtocol(boolean noInit) {}
    
    private static final RemoteMessageProtocol defaultInstance;
    public static RemoteMessageProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteMessageProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .UuidProtocol uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.UuidProtocol uuid_;
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid() {
      return uuid_;
    }
    
    // required .ActorInfoProtocol actorInfo = 2;
    public static final int ACTORINFO_FIELD_NUMBER = 2;
    private akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol actorInfo_;
    public boolean hasActorInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol getActorInfo() {
      return actorInfo_;
    }
    
    // required bool oneWay = 3;
    public static final int ONEWAY_FIELD_NUMBER = 3;
    private boolean oneWay_;
    public boolean hasOneWay() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getOneWay() {
      return oneWay_;
    }
    
    // optional .MessageProtocol message = 4;
    public static final int MESSAGE_FIELD_NUMBER = 4;
    private akka.mobile.protocol.RemoteProtocol.MessageProtocol message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.mobile.protocol.RemoteProtocol.MessageProtocol getMessage() {
      return message_;
    }
    
    // optional .ExceptionProtocol exception = 5;
    public static final int EXCEPTION_FIELD_NUMBER = 5;
    private akka.mobile.protocol.RemoteProtocol.ExceptionProtocol exception_;
    public boolean hasException() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public akka.mobile.protocol.RemoteProtocol.ExceptionProtocol getException() {
      return exception_;
    }
    
    // optional .UuidProtocol supervisorUuid = 6;
    public static final int SUPERVISORUUID_FIELD_NUMBER = 6;
    private akka.mobile.protocol.RemoteProtocol.UuidProtocol supervisorUuid_;
    public boolean hasSupervisorUuid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public akka.mobile.protocol.RemoteProtocol.UuidProtocol getSupervisorUuid() {
      return supervisorUuid_;
    }
    
    // optional .RemoteActorRefProtocol sender = 7;
    public static final int SENDER_FIELD_NUMBER = 7;
    private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol sender_;
    public boolean hasSender() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getSender() {
      return sender_;
    }
    
    // repeated .MetadataEntryProtocol metadata = 8;
    public static final int METADATA_FIELD_NUMBER = 8;
    private java.util.List<akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol> metadata_;
    public java.util.List<akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol> getMetadataList() {
      return metadata_;
    }
    public java.util.List<? extends akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder> 
        getMetadataOrBuilderList() {
      return metadata_;
    }
    public int getMetadataCount() {
      return metadata_.size();
    }
    public akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol getMetadata(int index) {
      return metadata_.get(index);
    }
    public akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder getMetadataOrBuilder(
        int index) {
      return metadata_.get(index);
    }
    
    // optional string cookie = 9;
    public static final int COOKIE_FIELD_NUMBER = 9;
    private java.lang.Object cookie_;
    public boolean hasCookie() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getCookie() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cookie_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCookieBytes() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cookie_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      actorInfo_ = akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
      oneWay_ = false;
      message_ = akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
      exception_ = akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
      supervisorUuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      sender_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      metadata_ = java.util.Collections.emptyList();
      cookie_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOneWay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getUuid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActorInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMessage()) {
        if (!getMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasException()) {
        if (!getException().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSupervisorUuid()) {
        if (!getSupervisorUuid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSender()) {
        if (!getSender().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMetadataCount(); i++) {
        if (!getMetadata(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, actorInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, oneWay_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, message_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, exception_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, supervisorUuid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, sender_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        output.writeMessage(8, metadata_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getCookieBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, actorInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, oneWay_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, message_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, exception_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, supervisorUuid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, sender_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, metadata_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getCookieBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        actorInfo_ = akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        oneWay_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        exception_ = akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        supervisorUuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        sender_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000040);
        metadata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        cookie_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol build() {
        akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol result = new akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actorInfo_ = actorInfo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oneWay_ = oneWay_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.exception_ = exception_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.supervisorUuid_ = supervisorUuid_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sender_ = sender_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          metadata_ = java.util.Collections.unmodifiableList(metadata_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.metadata_ = metadata_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.cookie_ = cookie_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          mergeUuid(other.getUuid());
        }
        if (other.hasActorInfo()) {
          mergeActorInfo(other.getActorInfo());
        }
        if (other.hasOneWay()) {
          setOneWay(other.getOneWay());
        }
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        if (other.hasException()) {
          mergeException(other.getException());
        }
        if (other.hasSupervisorUuid()) {
          mergeSupervisorUuid(other.getSupervisorUuid());
        }
        if (other.hasSender()) {
          mergeSender(other.getSender());
        }
        if (!other.metadata_.isEmpty()) {
          if (metadata_.isEmpty()) {
            metadata_ = other.metadata_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureMetadataIsMutable();
            metadata_.addAll(other.metadata_);
          }
          
        }
        if (other.hasCookie()) {
          setCookie(other.getCookie());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasActorInfo()) {
          
          return false;
        }
        if (!hasOneWay()) {
          
          return false;
        }
        if (!getUuid().isInitialized()) {
          
          return false;
        }
        if (!getActorInfo().isInitialized()) {
          
          return false;
        }
        if (hasMessage()) {
          if (!getMessage().isInitialized()) {
            
            return false;
          }
        }
        if (hasException()) {
          if (!getException().isInitialized()) {
            
            return false;
          }
        }
        if (hasSupervisorUuid()) {
          if (!getSupervisorUuid().isInitialized()) {
            
            return false;
          }
        }
        if (hasSender()) {
          if (!getSender().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMetadataCount(); i++) {
          if (!getMetadata(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasUuid()) {
                subBuilder.mergeFrom(getUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuid(subBuilder.buildPartial());
              break;
            }
            case 18: {
              akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.newBuilder();
              if (hasActorInfo()) {
                subBuilder.mergeFrom(getActorInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setActorInfo(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              oneWay_ = input.readBool();
              break;
            }
            case 34: {
              akka.mobile.protocol.RemoteProtocol.MessageProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.MessageProtocol.newBuilder();
              if (hasMessage()) {
                subBuilder.mergeFrom(getMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMessage(subBuilder.buildPartial());
              break;
            }
            case 42: {
              akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.newBuilder();
              if (hasException()) {
                subBuilder.mergeFrom(getException());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setException(subBuilder.buildPartial());
              break;
            }
            case 50: {
              akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasSupervisorUuid()) {
                subBuilder.mergeFrom(getSupervisorUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSupervisorUuid(subBuilder.buildPartial());
              break;
            }
            case 58: {
              akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder();
              if (hasSender()) {
                subBuilder.mergeFrom(getSender());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSender(subBuilder.buildPartial());
              break;
            }
            case 66: {
              akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMetadata(subBuilder.buildPartial());
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              cookie_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol uuid = 1;
      private akka.mobile.protocol.RemoteProtocol.UuidProtocol uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid() {
        return uuid_;
      }
      public Builder setUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        uuid_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUuid(
          akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        uuid_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            uuid_ != akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
          uuid_ =
            akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
        } else {
          uuid_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUuid() {
        uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // required .ActorInfoProtocol actorInfo = 2;
      private akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol actorInfo_ = akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
      public boolean hasActorInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol getActorInfo() {
        return actorInfo_;
      }
      public Builder setActorInfo(akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        actorInfo_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setActorInfo(
          akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.Builder builderForValue) {
        actorInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeActorInfo(akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            actorInfo_ != akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance()) {
          actorInfo_ =
            akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.newBuilder(actorInfo_).mergeFrom(value).buildPartial();
        } else {
          actorInfo_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearActorInfo() {
        actorInfo_ = akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // required bool oneWay = 3;
      private boolean oneWay_ ;
      public boolean hasOneWay() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getOneWay() {
        return oneWay_;
      }
      public Builder setOneWay(boolean value) {
        bitField0_ |= 0x00000004;
        oneWay_ = value;
        
        return this;
      }
      public Builder clearOneWay() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oneWay_ = false;
        
        return this;
      }
      
      // optional .MessageProtocol message = 4;
      private akka.mobile.protocol.RemoteProtocol.MessageProtocol message_ = akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.mobile.protocol.RemoteProtocol.MessageProtocol getMessage() {
        return message_;
      }
      public Builder setMessage(akka.mobile.protocol.RemoteProtocol.MessageProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        message_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setMessage(
          akka.mobile.protocol.RemoteProtocol.MessageProtocol.Builder builderForValue) {
        message_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeMessage(akka.mobile.protocol.RemoteProtocol.MessageProtocol value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            message_ != akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance()) {
          message_ =
            akka.mobile.protocol.RemoteProtocol.MessageProtocol.newBuilder(message_).mergeFrom(value).buildPartial();
        } else {
          message_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearMessage() {
        message_ = akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // optional .ExceptionProtocol exception = 5;
      private akka.mobile.protocol.RemoteProtocol.ExceptionProtocol exception_ = akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
      public boolean hasException() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public akka.mobile.protocol.RemoteProtocol.ExceptionProtocol getException() {
        return exception_;
      }
      public Builder setException(akka.mobile.protocol.RemoteProtocol.ExceptionProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        exception_ = value;
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setException(
          akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.Builder builderForValue) {
        exception_ = builderForValue.build();
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeException(akka.mobile.protocol.RemoteProtocol.ExceptionProtocol value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            exception_ != akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance()) {
          exception_ =
            akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.newBuilder(exception_).mergeFrom(value).buildPartial();
        } else {
          exception_ = value;
        }
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearException() {
        exception_ = akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      // optional .UuidProtocol supervisorUuid = 6;
      private akka.mobile.protocol.RemoteProtocol.UuidProtocol supervisorUuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      public boolean hasSupervisorUuid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol getSupervisorUuid() {
        return supervisorUuid_;
      }
      public Builder setSupervisorUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        supervisorUuid_ = value;
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setSupervisorUuid(
          akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        supervisorUuid_ = builderForValue.build();
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeSupervisorUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            supervisorUuid_ != akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
          supervisorUuid_ =
            akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder(supervisorUuid_).mergeFrom(value).buildPartial();
        } else {
          supervisorUuid_ = value;
        }
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearSupervisorUuid() {
        supervisorUuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      // optional .RemoteActorRefProtocol sender = 7;
      private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol sender_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      public boolean hasSender() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getSender() {
        return sender_;
      }
      public Builder setSender(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sender_ = value;
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setSender(
          akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder builderForValue) {
        sender_ = builderForValue.build();
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeSender(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            sender_ != akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
          sender_ =
            akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder(sender_).mergeFrom(value).buildPartial();
        } else {
          sender_ = value;
        }
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearSender() {
        sender_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      // repeated .MetadataEntryProtocol metadata = 8;
      private java.util.List<akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol> metadata_ =
        java.util.Collections.emptyList();
      private void ensureMetadataIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          metadata_ = new java.util.ArrayList<akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol>(metadata_);
          bitField0_ |= 0x00000080;
         }
      }
      
      public java.util.List<akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol> getMetadataList() {
        return java.util.Collections.unmodifiableList(metadata_);
      }
      public int getMetadataCount() {
        return metadata_.size();
      }
      public akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol getMetadata(int index) {
        return metadata_.get(index);
      }
      public Builder setMetadata(
          int index, akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataIsMutable();
        metadata_.set(index, value);
        
        return this;
      }
      public Builder setMetadata(
          int index, akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.Builder builderForValue) {
        ensureMetadataIsMutable();
        metadata_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addMetadata(akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataIsMutable();
        metadata_.add(value);
        
        return this;
      }
      public Builder addMetadata(
          int index, akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetadataIsMutable();
        metadata_.add(index, value);
        
        return this;
      }
      public Builder addMetadata(
          akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.Builder builderForValue) {
        ensureMetadataIsMutable();
        metadata_.add(builderForValue.build());
        
        return this;
      }
      public Builder addMetadata(
          int index, akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.Builder builderForValue) {
        ensureMetadataIsMutable();
        metadata_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllMetadata(
          java.lang.Iterable<? extends akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol> values) {
        ensureMetadataIsMutable();
        super.addAll(values, metadata_);
        
        return this;
      }
      public Builder clearMetadata() {
        metadata_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        
        return this;
      }
      public Builder removeMetadata(int index) {
        ensureMetadataIsMutable();
        metadata_.remove(index);
        
        return this;
      }
      
      // optional string cookie = 9;
      private java.lang.Object cookie_ = "";
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getCookie() {
        java.lang.Object ref = cookie_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cookie_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCookie(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        cookie_ = value;
        
        return this;
      }
      public Builder clearCookie() {
        bitField0_ = (bitField0_ & ~0x00000100);
        cookie_ = getDefaultInstance().getCookie();
        
        return this;
      }
      void setCookie(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        cookie_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteMessageProtocol)
    }
    
    static {
      defaultInstance = new RemoteMessageProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteMessageProtocol)
  }
  
  public interface RemoteControlProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional string cookie = 1;
    boolean hasCookie();
    String getCookie();
    
    // required .CommandType commandType = 2;
    boolean hasCommandType();
    akka.mobile.protocol.RemoteProtocol.CommandType getCommandType();
  }
  public static final class RemoteControlProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements RemoteControlProtocolOrBuilder {
    // Use RemoteControlProtocol.newBuilder() to construct.
    private RemoteControlProtocol(Builder builder) {
      super(builder);
    }
    private RemoteControlProtocol(boolean noInit) {}
    
    private static final RemoteControlProtocol defaultInstance;
    public static RemoteControlProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteControlProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional string cookie = 1;
    public static final int COOKIE_FIELD_NUMBER = 1;
    private java.lang.Object cookie_;
    public boolean hasCookie() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getCookie() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cookie_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCookieBytes() {
      java.lang.Object ref = cookie_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cookie_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .CommandType commandType = 2;
    public static final int COMMANDTYPE_FIELD_NUMBER = 2;
    private akka.mobile.protocol.RemoteProtocol.CommandType commandType_;
    public boolean hasCommandType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public akka.mobile.protocol.RemoteProtocol.CommandType getCommandType() {
      return commandType_;
    }
    
    private void initFields() {
      cookie_ = "";
      commandType_ = akka.mobile.protocol.RemoteProtocol.CommandType.SHUTDOWN;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCommandType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCookieBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, commandType_.getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCookieBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, commandType_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.RemoteControlProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cookie_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        commandType_ = akka.mobile.protocol.RemoteProtocol.CommandType.SHUTDOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol build() {
        akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol result = new akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cookie_ = cookie_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commandType_ = commandType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.RemoteControlProtocol.getDefaultInstance()) return this;
        if (other.hasCookie()) {
          setCookie(other.getCookie());
        }
        if (other.hasCommandType()) {
          setCommandType(other.getCommandType());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCommandType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              cookie_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              akka.mobile.protocol.RemoteProtocol.CommandType value = akka.mobile.protocol.RemoteProtocol.CommandType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                commandType_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string cookie = 1;
      private java.lang.Object cookie_ = "";
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getCookie() {
        java.lang.Object ref = cookie_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cookie_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCookie(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cookie_ = value;
        
        return this;
      }
      public Builder clearCookie() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cookie_ = getDefaultInstance().getCookie();
        
        return this;
      }
      void setCookie(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        cookie_ = value;
        
      }
      
      // required .CommandType commandType = 2;
      private akka.mobile.protocol.RemoteProtocol.CommandType commandType_ = akka.mobile.protocol.RemoteProtocol.CommandType.SHUTDOWN;
      public boolean hasCommandType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public akka.mobile.protocol.RemoteProtocol.CommandType getCommandType() {
        return commandType_;
      }
      public Builder setCommandType(akka.mobile.protocol.RemoteProtocol.CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        commandType_ = value;
        
        return this;
      }
      public Builder clearCommandType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commandType_ = akka.mobile.protocol.RemoteProtocol.CommandType.SHUTDOWN;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteControlProtocol)
    }
    
    static {
      defaultInstance = new RemoteControlProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteControlProtocol)
  }
  
  public interface RemoteActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string classOrServiceName = 1;
    boolean hasClassOrServiceName();
    String getClassOrServiceName();
    
    // required string actorClassname = 2;
    boolean hasActorClassname();
    String getActorClassname();
    
    // required .AddressProtocol homeAddress = 3;
    boolean hasHomeAddress();
    akka.mobile.protocol.RemoteProtocol.AddressProtocol getHomeAddress();
    
    // optional uint64 timeout = 4;
    boolean hasTimeout();
    long getTimeout();
  }
  public static final class RemoteActorRefProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements RemoteActorRefProtocolOrBuilder {
    // Use RemoteActorRefProtocol.newBuilder() to construct.
    private RemoteActorRefProtocol(Builder builder) {
      super(builder);
    }
    private RemoteActorRefProtocol(boolean noInit) {}
    
    private static final RemoteActorRefProtocol defaultInstance;
    public static RemoteActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string classOrServiceName = 1;
    public static final int CLASSORSERVICENAME_FIELD_NUMBER = 1;
    private java.lang.Object classOrServiceName_;
    public boolean hasClassOrServiceName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getClassOrServiceName() {
      java.lang.Object ref = classOrServiceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          classOrServiceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClassOrServiceNameBytes() {
      java.lang.Object ref = classOrServiceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        classOrServiceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string actorClassname = 2;
    public static final int ACTORCLASSNAME_FIELD_NUMBER = 2;
    private java.lang.Object actorClassname_;
    public boolean hasActorClassname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getActorClassname() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          actorClassname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getActorClassnameBytes() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        actorClassname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .AddressProtocol homeAddress = 3;
    public static final int HOMEADDRESS_FIELD_NUMBER = 3;
    private akka.mobile.protocol.RemoteProtocol.AddressProtocol homeAddress_;
    public boolean hasHomeAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public akka.mobile.protocol.RemoteProtocol.AddressProtocol getHomeAddress() {
      return homeAddress_;
    }
    
    // optional uint64 timeout = 4;
    public static final int TIMEOUT_FIELD_NUMBER = 4;
    private long timeout_;
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getTimeout() {
      return timeout_;
    }
    
    private void initFields() {
      classOrServiceName_ = "";
      actorClassname_ = "";
      homeAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      timeout_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasClassOrServiceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHomeAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHomeAddress().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassOrServiceNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, homeAddress_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, timeout_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassOrServiceNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, homeAddress_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, timeout_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        classOrServiceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        actorClassname_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        homeAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol build() {
        akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol result = new akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classOrServiceName_ = classOrServiceName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actorClassname_ = actorClassname_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.homeAddress_ = homeAddress_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeout_ = timeout_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasClassOrServiceName()) {
          setClassOrServiceName(other.getClassOrServiceName());
        }
        if (other.hasActorClassname()) {
          setActorClassname(other.getActorClassname());
        }
        if (other.hasHomeAddress()) {
          mergeHomeAddress(other.getHomeAddress());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasClassOrServiceName()) {
          
          return false;
        }
        if (!hasActorClassname()) {
          
          return false;
        }
        if (!hasHomeAddress()) {
          
          return false;
        }
        if (!getHomeAddress().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              classOrServiceName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              actorClassname_ = input.readBytes();
              break;
            }
            case 26: {
              akka.mobile.protocol.RemoteProtocol.AddressProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.AddressProtocol.newBuilder();
              if (hasHomeAddress()) {
                subBuilder.mergeFrom(getHomeAddress());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHomeAddress(subBuilder.buildPartial());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeout_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string classOrServiceName = 1;
      private java.lang.Object classOrServiceName_ = "";
      public boolean hasClassOrServiceName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getClassOrServiceName() {
        java.lang.Object ref = classOrServiceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          classOrServiceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClassOrServiceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        classOrServiceName_ = value;
        
        return this;
      }
      public Builder clearClassOrServiceName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classOrServiceName_ = getDefaultInstance().getClassOrServiceName();
        
        return this;
      }
      void setClassOrServiceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        classOrServiceName_ = value;
        
      }
      
      // required string actorClassname = 2;
      private java.lang.Object actorClassname_ = "";
      public boolean hasActorClassname() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getActorClassname() {
        java.lang.Object ref = actorClassname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          actorClassname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setActorClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        actorClassname_ = value;
        
        return this;
      }
      public Builder clearActorClassname() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actorClassname_ = getDefaultInstance().getActorClassname();
        
        return this;
      }
      void setActorClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        actorClassname_ = value;
        
      }
      
      // required .AddressProtocol homeAddress = 3;
      private akka.mobile.protocol.RemoteProtocol.AddressProtocol homeAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      public boolean hasHomeAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public akka.mobile.protocol.RemoteProtocol.AddressProtocol getHomeAddress() {
        return homeAddress_;
      }
      public Builder setHomeAddress(akka.mobile.protocol.RemoteProtocol.AddressProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        homeAddress_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setHomeAddress(
          akka.mobile.protocol.RemoteProtocol.AddressProtocol.Builder builderForValue) {
        homeAddress_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeHomeAddress(akka.mobile.protocol.RemoteProtocol.AddressProtocol value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            homeAddress_ != akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance()) {
          homeAddress_ =
            akka.mobile.protocol.RemoteProtocol.AddressProtocol.newBuilder(homeAddress_).mergeFrom(value).buildPartial();
        } else {
          homeAddress_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearHomeAddress() {
        homeAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // optional uint64 timeout = 4;
      private long timeout_ ;
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getTimeout() {
        return timeout_;
      }
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000008;
        timeout_ = value;
        
        return this;
      }
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeout_ = 0L;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteActorRefProtocol)
    }
    
    static {
      defaultInstance = new RemoteActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteActorRefProtocol)
  }
  
  public interface RemoteTypedActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .RemoteActorRefProtocol actorRef = 1;
    boolean hasActorRef();
    akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getActorRef();
    
    // required string interfaceName = 2;
    boolean hasInterfaceName();
    String getInterfaceName();
  }
  public static final class RemoteTypedActorRefProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements RemoteTypedActorRefProtocolOrBuilder {
    // Use RemoteTypedActorRefProtocol.newBuilder() to construct.
    private RemoteTypedActorRefProtocol(Builder builder) {
      super(builder);
    }
    private RemoteTypedActorRefProtocol(boolean noInit) {}
    
    private static final RemoteTypedActorRefProtocol defaultInstance;
    public static RemoteTypedActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public RemoteTypedActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .RemoteActorRefProtocol actorRef = 1;
    public static final int ACTORREF_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol actorRef_;
    public boolean hasActorRef() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getActorRef() {
      return actorRef_;
    }
    
    // required string interfaceName = 2;
    public static final int INTERFACENAME_FIELD_NUMBER = 2;
    private java.lang.Object interfaceName_;
    public boolean hasInterfaceName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getInterfaceName() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          interfaceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInterfaceNameBytes() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      actorRef_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      interfaceName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasActorRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterfaceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActorRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInterfaceNameBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInterfaceNameBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        actorRef_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        interfaceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol build() {
        akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol result = new akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.actorRef_ = actorRef_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.interfaceName_ = interfaceName_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.RemoteTypedActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasActorRef()) {
          mergeActorRef(other.getActorRef());
        }
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasActorRef()) {
          
          return false;
        }
        if (!hasInterfaceName()) {
          
          return false;
        }
        if (!getActorRef().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder();
              if (hasActorRef()) {
                subBuilder.mergeFrom(getActorRef());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setActorRef(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              interfaceName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .RemoteActorRefProtocol actorRef = 1;
      private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol actorRef_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      public boolean hasActorRef() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getActorRef() {
        return actorRef_;
      }
      public Builder setActorRef(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        actorRef_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setActorRef(
          akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder builderForValue) {
        actorRef_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeActorRef(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            actorRef_ != akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
          actorRef_ =
            akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder(actorRef_).mergeFrom(value).buildPartial();
        } else {
          actorRef_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearActorRef() {
        actorRef_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // required string interfaceName = 2;
      private java.lang.Object interfaceName_ = "";
      public boolean hasInterfaceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getInterfaceName() {
        java.lang.Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInterfaceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        interfaceName_ = value;
        
        return this;
      }
      public Builder clearInterfaceName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interfaceName_ = getDefaultInstance().getInterfaceName();
        
        return this;
      }
      void setInterfaceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        interfaceName_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:RemoteTypedActorRefProtocol)
    }
    
    static {
      defaultInstance = new RemoteTypedActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RemoteTypedActorRefProtocol)
  }
  
  public interface SerializedActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .UuidProtocol uuid = 1;
    boolean hasUuid();
    akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid();
    
    // required string id = 2;
    boolean hasId();
    String getId();
    
    // required string actorClassname = 3;
    boolean hasActorClassname();
    String getActorClassname();
    
    // required .AddressProtocol originalAddress = 4;
    boolean hasOriginalAddress();
    akka.mobile.protocol.RemoteProtocol.AddressProtocol getOriginalAddress();
    
    // optional bytes actorInstance = 5;
    boolean hasActorInstance();
    com.google.protobuf.ByteString getActorInstance();
    
    // optional string serializerClassname = 6;
    boolean hasSerializerClassname();
    String getSerializerClassname();
    
    // optional uint64 timeout = 7;
    boolean hasTimeout();
    long getTimeout();
    
    // optional uint64 receiveTimeout = 8;
    boolean hasReceiveTimeout();
    long getReceiveTimeout();
    
    // optional .LifeCycleProtocol lifeCycle = 9;
    boolean hasLifeCycle();
    akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol getLifeCycle();
    
    // optional .RemoteActorRefProtocol supervisor = 10;
    boolean hasSupervisor();
    akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getSupervisor();
    
    // optional bytes hotswapStack = 11;
    boolean hasHotswapStack();
    com.google.protobuf.ByteString getHotswapStack();
    
    // repeated .RemoteMessageProtocol messages = 12;
    java.util.List<akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol> 
        getMessagesList();
    akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getMessages(int index);
    int getMessagesCount();
  }
  public static final class SerializedActorRefProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements SerializedActorRefProtocolOrBuilder {
    // Use SerializedActorRefProtocol.newBuilder() to construct.
    private SerializedActorRefProtocol(Builder builder) {
      super(builder);
    }
    private SerializedActorRefProtocol(boolean noInit) {}
    
    private static final SerializedActorRefProtocol defaultInstance;
    public static SerializedActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public SerializedActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .UuidProtocol uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.UuidProtocol uuid_;
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid() {
      return uuid_;
    }
    
    // required string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string actorClassname = 3;
    public static final int ACTORCLASSNAME_FIELD_NUMBER = 3;
    private java.lang.Object actorClassname_;
    public boolean hasActorClassname() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getActorClassname() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          actorClassname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getActorClassnameBytes() {
      java.lang.Object ref = actorClassname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        actorClassname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .AddressProtocol originalAddress = 4;
    public static final int ORIGINALADDRESS_FIELD_NUMBER = 4;
    private akka.mobile.protocol.RemoteProtocol.AddressProtocol originalAddress_;
    public boolean hasOriginalAddress() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.mobile.protocol.RemoteProtocol.AddressProtocol getOriginalAddress() {
      return originalAddress_;
    }
    
    // optional bytes actorInstance = 5;
    public static final int ACTORINSTANCE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString actorInstance_;
    public boolean hasActorInstance() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.google.protobuf.ByteString getActorInstance() {
      return actorInstance_;
    }
    
    // optional string serializerClassname = 6;
    public static final int SERIALIZERCLASSNAME_FIELD_NUMBER = 6;
    private java.lang.Object serializerClassname_;
    public boolean hasSerializerClassname() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getSerializerClassname() {
      java.lang.Object ref = serializerClassname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serializerClassname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSerializerClassnameBytes() {
      java.lang.Object ref = serializerClassname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serializerClassname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 timeout = 7;
    public static final int TIMEOUT_FIELD_NUMBER = 7;
    private long timeout_;
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public long getTimeout() {
      return timeout_;
    }
    
    // optional uint64 receiveTimeout = 8;
    public static final int RECEIVETIMEOUT_FIELD_NUMBER = 8;
    private long receiveTimeout_;
    public boolean hasReceiveTimeout() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getReceiveTimeout() {
      return receiveTimeout_;
    }
    
    // optional .LifeCycleProtocol lifeCycle = 9;
    public static final int LIFECYCLE_FIELD_NUMBER = 9;
    private akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol lifeCycle_;
    public boolean hasLifeCycle() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol getLifeCycle() {
      return lifeCycle_;
    }
    
    // optional .RemoteActorRefProtocol supervisor = 10;
    public static final int SUPERVISOR_FIELD_NUMBER = 10;
    private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol supervisor_;
    public boolean hasSupervisor() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getSupervisor() {
      return supervisor_;
    }
    
    // optional bytes hotswapStack = 11;
    public static final int HOTSWAPSTACK_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString hotswapStack_;
    public boolean hasHotswapStack() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public com.google.protobuf.ByteString getHotswapStack() {
      return hotswapStack_;
    }
    
    // repeated .RemoteMessageProtocol messages = 12;
    public static final int MESSAGES_FIELD_NUMBER = 12;
    private java.util.List<akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol> messages_;
    public java.util.List<akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol> getMessagesList() {
      return messages_;
    }
    public java.util.List<? extends akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder> 
        getMessagesOrBuilderList() {
      return messages_;
    }
    public int getMessagesCount() {
      return messages_.size();
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getMessages(int index) {
      return messages_.get(index);
    }
    public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocolOrBuilder getMessagesOrBuilder(
        int index) {
      return messages_.get(index);
    }
    
    private void initFields() {
      uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      id_ = "";
      actorClassname_ = "";
      originalAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      actorInstance_ = com.google.protobuf.ByteString.EMPTY;
      serializerClassname_ = "";
      timeout_ = 0L;
      receiveTimeout_ = 0L;
      lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
      supervisor_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      hotswapStack_ = com.google.protobuf.ByteString.EMPTY;
      messages_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOriginalAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getUuid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOriginalAddress().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasLifeCycle()) {
        if (!getLifeCycle().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSupervisor()) {
        if (!getSupervisor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMessagesCount(); i++) {
        if (!getMessages(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, originalAddress_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, actorInstance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getSerializerClassnameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, timeout_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, receiveTimeout_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, lifeCycle_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, supervisor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, hotswapStack_);
      }
      for (int i = 0; i < messages_.size(); i++) {
        output.writeMessage(12, messages_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getActorClassnameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, originalAddress_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, actorInstance_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSerializerClassnameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, timeout_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, receiveTimeout_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, lifeCycle_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, supervisor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, hotswapStack_);
      }
      for (int i = 0; i < messages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, messages_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        actorClassname_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        originalAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        actorInstance_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        serializerClassname_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        receiveTimeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000100);
        supervisor_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000200);
        hotswapStack_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        messages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol build() {
        akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol result = new akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.actorClassname_ = actorClassname_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.originalAddress_ = originalAddress_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.actorInstance_ = actorInstance_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.serializerClassname_ = serializerClassname_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.receiveTimeout_ = receiveTimeout_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lifeCycle_ = lifeCycle_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.supervisor_ = supervisor_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.hotswapStack_ = hotswapStack_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          messages_ = java.util.Collections.unmodifiableList(messages_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.messages_ = messages_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          mergeUuid(other.getUuid());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasActorClassname()) {
          setActorClassname(other.getActorClassname());
        }
        if (other.hasOriginalAddress()) {
          mergeOriginalAddress(other.getOriginalAddress());
        }
        if (other.hasActorInstance()) {
          setActorInstance(other.getActorInstance());
        }
        if (other.hasSerializerClassname()) {
          setSerializerClassname(other.getSerializerClassname());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasReceiveTimeout()) {
          setReceiveTimeout(other.getReceiveTimeout());
        }
        if (other.hasLifeCycle()) {
          mergeLifeCycle(other.getLifeCycle());
        }
        if (other.hasSupervisor()) {
          mergeSupervisor(other.getSupervisor());
        }
        if (other.hasHotswapStack()) {
          setHotswapStack(other.getHotswapStack());
        }
        if (!other.messages_.isEmpty()) {
          if (messages_.isEmpty()) {
            messages_ = other.messages_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureMessagesIsMutable();
            messages_.addAll(other.messages_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasActorClassname()) {
          
          return false;
        }
        if (!hasOriginalAddress()) {
          
          return false;
        }
        if (!getUuid().isInitialized()) {
          
          return false;
        }
        if (!getOriginalAddress().isInitialized()) {
          
          return false;
        }
        if (hasLifeCycle()) {
          if (!getLifeCycle().isInitialized()) {
            
            return false;
          }
        }
        if (hasSupervisor()) {
          if (!getSupervisor().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMessagesCount(); i++) {
          if (!getMessages(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasUuid()) {
                subBuilder.mergeFrom(getUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuid(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              id_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              actorClassname_ = input.readBytes();
              break;
            }
            case 34: {
              akka.mobile.protocol.RemoteProtocol.AddressProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.AddressProtocol.newBuilder();
              if (hasOriginalAddress()) {
                subBuilder.mergeFrom(getOriginalAddress());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOriginalAddress(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              actorInstance_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              serializerClassname_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              timeout_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              receiveTimeout_ = input.readUInt64();
              break;
            }
            case 74: {
              akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.newBuilder();
              if (hasLifeCycle()) {
                subBuilder.mergeFrom(getLifeCycle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLifeCycle(subBuilder.buildPartial());
              break;
            }
            case 82: {
              akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder();
              if (hasSupervisor()) {
                subBuilder.mergeFrom(getSupervisor());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSupervisor(subBuilder.buildPartial());
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              hotswapStack_ = input.readBytes();
              break;
            }
            case 98: {
              akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMessages(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol uuid = 1;
      private akka.mobile.protocol.RemoteProtocol.UuidProtocol uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid() {
        return uuid_;
      }
      public Builder setUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        uuid_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUuid(
          akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        uuid_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            uuid_ != akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
          uuid_ =
            akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
        } else {
          uuid_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUuid() {
        uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // required string id = 2;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        
      }
      
      // required string actorClassname = 3;
      private java.lang.Object actorClassname_ = "";
      public boolean hasActorClassname() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getActorClassname() {
        java.lang.Object ref = actorClassname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          actorClassname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setActorClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        actorClassname_ = value;
        
        return this;
      }
      public Builder clearActorClassname() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actorClassname_ = getDefaultInstance().getActorClassname();
        
        return this;
      }
      void setActorClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        actorClassname_ = value;
        
      }
      
      // required .AddressProtocol originalAddress = 4;
      private akka.mobile.protocol.RemoteProtocol.AddressProtocol originalAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      public boolean hasOriginalAddress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.mobile.protocol.RemoteProtocol.AddressProtocol getOriginalAddress() {
        return originalAddress_;
      }
      public Builder setOriginalAddress(akka.mobile.protocol.RemoteProtocol.AddressProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        originalAddress_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setOriginalAddress(
          akka.mobile.protocol.RemoteProtocol.AddressProtocol.Builder builderForValue) {
        originalAddress_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeOriginalAddress(akka.mobile.protocol.RemoteProtocol.AddressProtocol value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            originalAddress_ != akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance()) {
          originalAddress_ =
            akka.mobile.protocol.RemoteProtocol.AddressProtocol.newBuilder(originalAddress_).mergeFrom(value).buildPartial();
        } else {
          originalAddress_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearOriginalAddress() {
        originalAddress_ = akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // optional bytes actorInstance = 5;
      private com.google.protobuf.ByteString actorInstance_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasActorInstance() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.google.protobuf.ByteString getActorInstance() {
        return actorInstance_;
      }
      public Builder setActorInstance(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        actorInstance_ = value;
        
        return this;
      }
      public Builder clearActorInstance() {
        bitField0_ = (bitField0_ & ~0x00000010);
        actorInstance_ = getDefaultInstance().getActorInstance();
        
        return this;
      }
      
      // optional string serializerClassname = 6;
      private java.lang.Object serializerClassname_ = "";
      public boolean hasSerializerClassname() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getSerializerClassname() {
        java.lang.Object ref = serializerClassname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serializerClassname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSerializerClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        serializerClassname_ = value;
        
        return this;
      }
      public Builder clearSerializerClassname() {
        bitField0_ = (bitField0_ & ~0x00000020);
        serializerClassname_ = getDefaultInstance().getSerializerClassname();
        
        return this;
      }
      void setSerializerClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        serializerClassname_ = value;
        
      }
      
      // optional uint64 timeout = 7;
      private long timeout_ ;
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getTimeout() {
        return timeout_;
      }
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000040;
        timeout_ = value;
        
        return this;
      }
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timeout_ = 0L;
        
        return this;
      }
      
      // optional uint64 receiveTimeout = 8;
      private long receiveTimeout_ ;
      public boolean hasReceiveTimeout() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getReceiveTimeout() {
        return receiveTimeout_;
      }
      public Builder setReceiveTimeout(long value) {
        bitField0_ |= 0x00000080;
        receiveTimeout_ = value;
        
        return this;
      }
      public Builder clearReceiveTimeout() {
        bitField0_ = (bitField0_ & ~0x00000080);
        receiveTimeout_ = 0L;
        
        return this;
      }
      
      // optional .LifeCycleProtocol lifeCycle = 9;
      private akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
      public boolean hasLifeCycle() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol getLifeCycle() {
        return lifeCycle_;
      }
      public Builder setLifeCycle(akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        lifeCycle_ = value;
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setLifeCycle(
          akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.Builder builderForValue) {
        lifeCycle_ = builderForValue.build();
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergeLifeCycle(akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol value) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            lifeCycle_ != akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance()) {
          lifeCycle_ =
            akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.newBuilder(lifeCycle_).mergeFrom(value).buildPartial();
        } else {
          lifeCycle_ = value;
        }
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearLifeCycle() {
        lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      // optional .RemoteActorRefProtocol supervisor = 10;
      private akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol supervisor_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
      public boolean hasSupervisor() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol getSupervisor() {
        return supervisor_;
      }
      public Builder setSupervisor(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        supervisor_ = value;
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setSupervisor(
          akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.Builder builderForValue) {
        supervisor_ = builderForValue.build();
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeSupervisor(akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol value) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            supervisor_ != akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
          supervisor_ =
            akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.newBuilder(supervisor_).mergeFrom(value).buildPartial();
        } else {
          supervisor_ = value;
        }
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearSupervisor() {
        supervisor_ = akka.mobile.protocol.RemoteProtocol.RemoteActorRefProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      // optional bytes hotswapStack = 11;
      private com.google.protobuf.ByteString hotswapStack_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasHotswapStack() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public com.google.protobuf.ByteString getHotswapStack() {
        return hotswapStack_;
      }
      public Builder setHotswapStack(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        hotswapStack_ = value;
        
        return this;
      }
      public Builder clearHotswapStack() {
        bitField0_ = (bitField0_ & ~0x00000400);
        hotswapStack_ = getDefaultInstance().getHotswapStack();
        
        return this;
      }
      
      // repeated .RemoteMessageProtocol messages = 12;
      private java.util.List<akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol> messages_ =
        java.util.Collections.emptyList();
      private void ensureMessagesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          messages_ = new java.util.ArrayList<akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol>(messages_);
          bitField0_ |= 0x00000800;
         }
      }
      
      public java.util.List<akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol> getMessagesList() {
        return java.util.Collections.unmodifiableList(messages_);
      }
      public int getMessagesCount() {
        return messages_.size();
      }
      public akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol getMessages(int index) {
        return messages_.get(index);
      }
      public Builder setMessages(
          int index, akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.set(index, value);
        
        return this;
      }
      public Builder setMessages(
          int index, akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        ensureMessagesIsMutable();
        messages_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addMessages(akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(value);
        
        return this;
      }
      public Builder addMessages(
          int index, akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessagesIsMutable();
        messages_.add(index, value);
        
        return this;
      }
      public Builder addMessages(
          akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        ensureMessagesIsMutable();
        messages_.add(builderForValue.build());
        
        return this;
      }
      public Builder addMessages(
          int index, akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol.Builder builderForValue) {
        ensureMessagesIsMutable();
        messages_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllMessages(
          java.lang.Iterable<? extends akka.mobile.protocol.RemoteProtocol.RemoteMessageProtocol> values) {
        ensureMessagesIsMutable();
        super.addAll(values, messages_);
        
        return this;
      }
      public Builder clearMessages() {
        messages_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        
        return this;
      }
      public Builder removeMessages(int index) {
        ensureMessagesIsMutable();
        messages_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:SerializedActorRefProtocol)
    }
    
    static {
      defaultInstance = new SerializedActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SerializedActorRefProtocol)
  }
  
  public interface SerializedTypedActorRefProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .SerializedActorRefProtocol actorRef = 1;
    boolean hasActorRef();
    akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol getActorRef();
    
    // required string interfaceName = 2;
    boolean hasInterfaceName();
    String getInterfaceName();
  }
  public static final class SerializedTypedActorRefProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements SerializedTypedActorRefProtocolOrBuilder {
    // Use SerializedTypedActorRefProtocol.newBuilder() to construct.
    private SerializedTypedActorRefProtocol(Builder builder) {
      super(builder);
    }
    private SerializedTypedActorRefProtocol(boolean noInit) {}
    
    private static final SerializedTypedActorRefProtocol defaultInstance;
    public static SerializedTypedActorRefProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public SerializedTypedActorRefProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .SerializedActorRefProtocol actorRef = 1;
    public static final int ACTORREF_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol actorRef_;
    public boolean hasActorRef() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol getActorRef() {
      return actorRef_;
    }
    
    // required string interfaceName = 2;
    public static final int INTERFACENAME_FIELD_NUMBER = 2;
    private java.lang.Object interfaceName_;
    public boolean hasInterfaceName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getInterfaceName() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          interfaceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInterfaceNameBytes() {
      java.lang.Object ref = interfaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        interfaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      actorRef_ = akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
      interfaceName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasActorRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterfaceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getActorRef().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getInterfaceNameBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getInterfaceNameBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        actorRef_ = akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        interfaceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol build() {
        akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol result = new akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.actorRef_ = actorRef_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.interfaceName_ = interfaceName_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.SerializedTypedActorRefProtocol.getDefaultInstance()) return this;
        if (other.hasActorRef()) {
          mergeActorRef(other.getActorRef());
        }
        if (other.hasInterfaceName()) {
          setInterfaceName(other.getInterfaceName());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasActorRef()) {
          
          return false;
        }
        if (!hasInterfaceName()) {
          
          return false;
        }
        if (!getActorRef().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.newBuilder();
              if (hasActorRef()) {
                subBuilder.mergeFrom(getActorRef());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setActorRef(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              interfaceName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .SerializedActorRefProtocol actorRef = 1;
      private akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol actorRef_ = akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
      public boolean hasActorRef() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol getActorRef() {
        return actorRef_;
      }
      public Builder setActorRef(akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        actorRef_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setActorRef(
          akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.Builder builderForValue) {
        actorRef_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeActorRef(akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            actorRef_ != akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance()) {
          actorRef_ =
            akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.newBuilder(actorRef_).mergeFrom(value).buildPartial();
        } else {
          actorRef_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearActorRef() {
        actorRef_ = akka.mobile.protocol.RemoteProtocol.SerializedActorRefProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // required string interfaceName = 2;
      private java.lang.Object interfaceName_ = "";
      public boolean hasInterfaceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getInterfaceName() {
        java.lang.Object ref = interfaceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          interfaceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInterfaceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        interfaceName_ = value;
        
        return this;
      }
      public Builder clearInterfaceName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interfaceName_ = getDefaultInstance().getInterfaceName();
        
        return this;
      }
      void setInterfaceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        interfaceName_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:SerializedTypedActorRefProtocol)
    }
    
    static {
      defaultInstance = new SerializedTypedActorRefProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SerializedTypedActorRefProtocol)
  }
  
  public interface MessageProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .SerializationSchemeType serializationScheme = 1;
    boolean hasSerializationScheme();
    akka.mobile.protocol.RemoteProtocol.SerializationSchemeType getSerializationScheme();
    
    // required bytes message = 2;
    boolean hasMessage();
    com.google.protobuf.ByteString getMessage();
    
    // optional bytes messageManifest = 3;
    boolean hasMessageManifest();
    com.google.protobuf.ByteString getMessageManifest();
  }
  public static final class MessageProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements MessageProtocolOrBuilder {
    // Use MessageProtocol.newBuilder() to construct.
    private MessageProtocol(Builder builder) {
      super(builder);
    }
    private MessageProtocol(boolean noInit) {}
    
    private static final MessageProtocol defaultInstance;
    public static MessageProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .SerializationSchemeType serializationScheme = 1;
    public static final int SERIALIZATIONSCHEME_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.SerializationSchemeType serializationScheme_;
    public boolean hasSerializationScheme() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.SerializationSchemeType getSerializationScheme() {
      return serializationScheme_;
    }
    
    // required bytes message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }
    
    // optional bytes messageManifest = 3;
    public static final int MESSAGEMANIFEST_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString messageManifest_;
    public boolean hasMessageManifest() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getMessageManifest() {
      return messageManifest_;
    }
    
    private void initFields() {
      serializationScheme_ = akka.mobile.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
      message_ = com.google.protobuf.ByteString.EMPTY;
      messageManifest_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSerializationScheme()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, serializationScheme_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, message_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, messageManifest_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, serializationScheme_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, message_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, messageManifest_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MessageProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.MessageProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.MessageProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.MessageProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.MessageProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        serializationScheme_ = akka.mobile.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        messageManifest_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.MessageProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.MessageProtocol build() {
        akka.mobile.protocol.RemoteProtocol.MessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.MessageProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.MessageProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.MessageProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.MessageProtocol result = new akka.mobile.protocol.RemoteProtocol.MessageProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serializationScheme_ = serializationScheme_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageManifest_ = messageManifest_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.MessageProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.MessageProtocol.getDefaultInstance()) return this;
        if (other.hasSerializationScheme()) {
          setSerializationScheme(other.getSerializationScheme());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasMessageManifest()) {
          setMessageManifest(other.getMessageManifest());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSerializationScheme()) {
          
          return false;
        }
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              akka.mobile.protocol.RemoteProtocol.SerializationSchemeType value = akka.mobile.protocol.RemoteProtocol.SerializationSchemeType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                serializationScheme_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              messageManifest_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .SerializationSchemeType serializationScheme = 1;
      private akka.mobile.protocol.RemoteProtocol.SerializationSchemeType serializationScheme_ = akka.mobile.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
      public boolean hasSerializationScheme() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.SerializationSchemeType getSerializationScheme() {
        return serializationScheme_;
      }
      public Builder setSerializationScheme(akka.mobile.protocol.RemoteProtocol.SerializationSchemeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        serializationScheme_ = value;
        
        return this;
      }
      public Builder clearSerializationScheme() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serializationScheme_ = akka.mobile.protocol.RemoteProtocol.SerializationSchemeType.JAVA;
        
        return this;
      }
      
      // required bytes message = 2;
      private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getMessage() {
        return message_;
      }
      public Builder setMessage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        
        return this;
      }
      
      // optional bytes messageManifest = 3;
      private com.google.protobuf.ByteString messageManifest_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasMessageManifest() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getMessageManifest() {
        return messageManifest_;
      }
      public Builder setMessageManifest(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageManifest_ = value;
        
        return this;
      }
      public Builder clearMessageManifest() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageManifest_ = getDefaultInstance().getMessageManifest();
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MessageProtocol)
    }
    
    static {
      defaultInstance = new MessageProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessageProtocol)
  }
  
  public interface ActorInfoProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .UuidProtocol uuid = 1;
    boolean hasUuid();
    akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid();
    
    // required string target = 2;
    boolean hasTarget();
    String getTarget();
    
    // required uint64 timeout = 3;
    boolean hasTimeout();
    long getTimeout();
    
    // required .ActorType actorType = 4;
    boolean hasActorType();
    akka.mobile.protocol.RemoteProtocol.ActorType getActorType();
    
    // optional .TypedActorInfoProtocol typedActorInfo = 5;
    boolean hasTypedActorInfo();
    akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol getTypedActorInfo();
    
    // optional string id = 6;
    boolean hasId();
    String getId();
  }
  public static final class ActorInfoProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements ActorInfoProtocolOrBuilder {
    // Use ActorInfoProtocol.newBuilder() to construct.
    private ActorInfoProtocol(Builder builder) {
      super(builder);
    }
    private ActorInfoProtocol(boolean noInit) {}
    
    private static final ActorInfoProtocol defaultInstance;
    public static ActorInfoProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public ActorInfoProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .UuidProtocol uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.UuidProtocol uuid_;
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid() {
      return uuid_;
    }
    
    // required string target = 2;
    public static final int TARGET_FIELD_NUMBER = 2;
    private java.lang.Object target_;
    public boolean hasTarget() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          target_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint64 timeout = 3;
    public static final int TIMEOUT_FIELD_NUMBER = 3;
    private long timeout_;
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTimeout() {
      return timeout_;
    }
    
    // required .ActorType actorType = 4;
    public static final int ACTORTYPE_FIELD_NUMBER = 4;
    private akka.mobile.protocol.RemoteProtocol.ActorType actorType_;
    public boolean hasActorType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public akka.mobile.protocol.RemoteProtocol.ActorType getActorType() {
      return actorType_;
    }
    
    // optional .TypedActorInfoProtocol typedActorInfo = 5;
    public static final int TYPEDACTORINFO_FIELD_NUMBER = 5;
    private akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol typedActorInfo_;
    public boolean hasTypedActorInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol getTypedActorInfo() {
      return typedActorInfo_;
    }
    
    // optional string id = 6;
    public static final int ID_FIELD_NUMBER = 6;
    private java.lang.Object id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          id_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      target_ = "";
      timeout_ = 0L;
      actorType_ = akka.mobile.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
      typedActorInfo_ = akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
      id_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTarget()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeout()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getUuid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTypedActorInfo()) {
        if (!getTypedActorInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, timeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, actorType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, typedActorInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getIdBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, uuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTargetBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, timeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, actorType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, typedActorInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.ActorInfoProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        target_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        timeout_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        actorType_ = akka.mobile.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
        bitField0_ = (bitField0_ & ~0x00000008);
        typedActorInfo_ = akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol build() {
        akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol result = new akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.target_ = target_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.actorType_ = actorType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.typedActorInfo_ = typedActorInfo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.ActorInfoProtocol.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          mergeUuid(other.getUuid());
        }
        if (other.hasTarget()) {
          setTarget(other.getTarget());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasActorType()) {
          setActorType(other.getActorType());
        }
        if (other.hasTypedActorInfo()) {
          mergeTypedActorInfo(other.getTypedActorInfo());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasTarget()) {
          
          return false;
        }
        if (!hasTimeout()) {
          
          return false;
        }
        if (!hasActorType()) {
          
          return false;
        }
        if (!getUuid().isInitialized()) {
          
          return false;
        }
        if (hasTypedActorInfo()) {
          if (!getTypedActorInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder();
              if (hasUuid()) {
                subBuilder.mergeFrom(getUuid());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUuid(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              target_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeout_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              akka.mobile.protocol.RemoteProtocol.ActorType value = akka.mobile.protocol.RemoteProtocol.ActorType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000008;
                actorType_ = value;
              }
              break;
            }
            case 42: {
              akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder subBuilder = akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.newBuilder();
              if (hasTypedActorInfo()) {
                subBuilder.mergeFrom(getTypedActorInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTypedActorInfo(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              id_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .UuidProtocol uuid = 1;
      private akka.mobile.protocol.RemoteProtocol.UuidProtocol uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol getUuid() {
        return uuid_;
      }
      public Builder setUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        uuid_ = value;
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setUuid(
          akka.mobile.protocol.RemoteProtocol.UuidProtocol.Builder builderForValue) {
        uuid_ = builderForValue.build();
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeUuid(akka.mobile.protocol.RemoteProtocol.UuidProtocol value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            uuid_ != akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) {
          uuid_ =
            akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
        } else {
          uuid_ = value;
        }
        
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearUuid() {
        uuid_ = akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      // required string target = 2;
      private java.lang.Object target_ = "";
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTarget(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        target_ = value;
        
        return this;
      }
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        target_ = getDefaultInstance().getTarget();
        
        return this;
      }
      void setTarget(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        target_ = value;
        
      }
      
      // required uint64 timeout = 3;
      private long timeout_ ;
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTimeout() {
        return timeout_;
      }
      public Builder setTimeout(long value) {
        bitField0_ |= 0x00000004;
        timeout_ = value;
        
        return this;
      }
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeout_ = 0L;
        
        return this;
      }
      
      // required .ActorType actorType = 4;
      private akka.mobile.protocol.RemoteProtocol.ActorType actorType_ = akka.mobile.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
      public boolean hasActorType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public akka.mobile.protocol.RemoteProtocol.ActorType getActorType() {
        return actorType_;
      }
      public Builder setActorType(akka.mobile.protocol.RemoteProtocol.ActorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        actorType_ = value;
        
        return this;
      }
      public Builder clearActorType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        actorType_ = akka.mobile.protocol.RemoteProtocol.ActorType.SCALA_ACTOR;
        
        return this;
      }
      
      // optional .TypedActorInfoProtocol typedActorInfo = 5;
      private akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol typedActorInfo_ = akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
      public boolean hasTypedActorInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol getTypedActorInfo() {
        return typedActorInfo_;
      }
      public Builder setTypedActorInfo(akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typedActorInfo_ = value;
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setTypedActorInfo(
          akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.Builder builderForValue) {
        typedActorInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeTypedActorInfo(akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            typedActorInfo_ != akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance()) {
          typedActorInfo_ =
            akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.newBuilder(typedActorInfo_).mergeFrom(value).buildPartial();
        } else {
          typedActorInfo_ = value;
        }
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearTypedActorInfo() {
        typedActorInfo_ = akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      // optional string id = 6;
      private java.lang.Object id_ = "";
      public boolean hasId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        id_ = value;
        
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = getDefaultInstance().getId();
        
        return this;
      }
      void setId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        id_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:ActorInfoProtocol)
    }
    
    static {
      defaultInstance = new ActorInfoProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ActorInfoProtocol)
  }
  
  public interface TypedActorInfoProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string interface = 1;
    boolean hasInterface();
    String getInterface();
    
    // required string method = 2;
    boolean hasMethod();
    String getMethod();
  }
  public static final class TypedActorInfoProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements TypedActorInfoProtocolOrBuilder {
    // Use TypedActorInfoProtocol.newBuilder() to construct.
    private TypedActorInfoProtocol(Builder builder) {
      super(builder);
    }
    private TypedActorInfoProtocol(boolean noInit) {}
    
    private static final TypedActorInfoProtocol defaultInstance;
    public static TypedActorInfoProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public TypedActorInfoProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string interface = 1;
    public static final int INTERFACE_FIELD_NUMBER = 1;
    private java.lang.Object interface_;
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getInterface() {
      java.lang.Object ref = interface_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          interface_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getInterfaceBytes() {
      java.lang.Object ref = interface_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        interface_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string method = 2;
    public static final int METHOD_FIELD_NUMBER = 2;
    private java.lang.Object method_;
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMethod() {
      java.lang.Object ref = method_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          method_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMethodBytes() {
      java.lang.Object ref = method_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        method_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      interface_ = "";
      method_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasInterface()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMethod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getInterfaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMethodBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getInterfaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMethodBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        interface_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        method_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol build() {
        akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol result = new akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.interface_ = interface_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.method_ = method_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.TypedActorInfoProtocol.getDefaultInstance()) return this;
        if (other.hasInterface()) {
          setInterface(other.getInterface());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasInterface()) {
          
          return false;
        }
        if (!hasMethod()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              interface_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              method_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string interface = 1;
      private java.lang.Object interface_ = "";
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getInterface() {
        java.lang.Object ref = interface_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          interface_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setInterface(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        interface_ = value;
        
        return this;
      }
      public Builder clearInterface() {
        bitField0_ = (bitField0_ & ~0x00000001);
        interface_ = getDefaultInstance().getInterface();
        
        return this;
      }
      void setInterface(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        interface_ = value;
        
      }
      
      // required string method = 2;
      private java.lang.Object method_ = "";
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMethod() {
        java.lang.Object ref = method_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          method_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMethod(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        method_ = value;
        
        return this;
      }
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000002);
        method_ = getDefaultInstance().getMethod();
        
        return this;
      }
      void setMethod(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        method_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:TypedActorInfoProtocol)
    }
    
    static {
      defaultInstance = new TypedActorInfoProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TypedActorInfoProtocol)
  }
  
  public interface UuidProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required uint64 high = 1;
    boolean hasHigh();
    long getHigh();
    
    // required uint64 low = 2;
    boolean hasLow();
    long getLow();
  }
  public static final class UuidProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements UuidProtocolOrBuilder {
    // Use UuidProtocol.newBuilder() to construct.
    private UuidProtocol(Builder builder) {
      super(builder);
    }
    private UuidProtocol(boolean noInit) {}
    
    private static final UuidProtocol defaultInstance;
    public static UuidProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public UuidProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required uint64 high = 1;
    public static final int HIGH_FIELD_NUMBER = 1;
    private long high_;
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getHigh() {
      return high_;
    }
    
    // required uint64 low = 2;
    public static final int LOW_FIELD_NUMBER = 2;
    private long low_;
    public boolean hasLow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getLow() {
      return low_;
    }
    
    private void initFields() {
      high_ = 0L;
      low_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHigh()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, high_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, low_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, high_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, low_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.UuidProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.UuidProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.UuidProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.UuidProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.UuidProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        high_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        low_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol build() {
        akka.mobile.protocol.RemoteProtocol.UuidProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.UuidProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.UuidProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.UuidProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.UuidProtocol result = new akka.mobile.protocol.RemoteProtocol.UuidProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.low_ = low_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.UuidProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.UuidProtocol.getDefaultInstance()) return this;
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHigh()) {
          
          return false;
        }
        if (!hasLow()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              high_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              low_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 high = 1;
      private long high_ ;
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getHigh() {
        return high_;
      }
      public Builder setHigh(long value) {
        bitField0_ |= 0x00000001;
        high_ = value;
        
        return this;
      }
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000001);
        high_ = 0L;
        
        return this;
      }
      
      // required uint64 low = 2;
      private long low_ ;
      public boolean hasLow() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getLow() {
        return low_;
      }
      public Builder setLow(long value) {
        bitField0_ |= 0x00000002;
        low_ = value;
        
        return this;
      }
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000002);
        low_ = 0L;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:UuidProtocol)
    }
    
    static {
      defaultInstance = new UuidProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:UuidProtocol)
  }
  
  public interface MetadataEntryProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string key = 1;
    boolean hasKey();
    String getKey();
    
    // required bytes value = 2;
    boolean hasValue();
    com.google.protobuf.ByteString getValue();
  }
  public static final class MetadataEntryProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements MetadataEntryProtocolOrBuilder {
    // Use MetadataEntryProtocol.newBuilder() to construct.
    private MetadataEntryProtocol(Builder builder) {
      super(builder);
    }
    private MetadataEntryProtocol(boolean noInit) {}
    
    private static final MetadataEntryProtocol defaultInstance;
    public static MetadataEntryProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public MetadataEntryProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          key_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bytes value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }
    
    private void initFields() {
      key_ = "";
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, value_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, value_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol build() {
        akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol result = new akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.MetadataEntryProtocol.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              value_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string key = 1;
      private java.lang.Object key_ = "";
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        
        return this;
      }
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        
        return this;
      }
      void setKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        
      }
      
      // required bytes value = 2;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MetadataEntryProtocol)
    }
    
    static {
      defaultInstance = new MetadataEntryProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MetadataEntryProtocol)
  }
  
  public interface LifeCycleProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .LifeCycleType lifeCycle = 1;
    boolean hasLifeCycle();
    akka.mobile.protocol.RemoteProtocol.LifeCycleType getLifeCycle();
  }
  public static final class LifeCycleProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements LifeCycleProtocolOrBuilder {
    // Use LifeCycleProtocol.newBuilder() to construct.
    private LifeCycleProtocol(Builder builder) {
      super(builder);
    }
    private LifeCycleProtocol(boolean noInit) {}
    
    private static final LifeCycleProtocol defaultInstance;
    public static LifeCycleProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public LifeCycleProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .LifeCycleType lifeCycle = 1;
    public static final int LIFECYCLE_FIELD_NUMBER = 1;
    private akka.mobile.protocol.RemoteProtocol.LifeCycleType lifeCycle_;
    public boolean hasLifeCycle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public akka.mobile.protocol.RemoteProtocol.LifeCycleType getLifeCycle() {
      return lifeCycle_;
    }
    
    private void initFields() {
      lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLifeCycle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, lifeCycle_.getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, lifeCycle_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.LifeCycleProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol build() {
        akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol result = new akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lifeCycle_ = lifeCycle_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.LifeCycleProtocol.getDefaultInstance()) return this;
        if (other.hasLifeCycle()) {
          setLifeCycle(other.getLifeCycle());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLifeCycle()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              akka.mobile.protocol.RemoteProtocol.LifeCycleType value = akka.mobile.protocol.RemoteProtocol.LifeCycleType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                lifeCycle_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .LifeCycleType lifeCycle = 1;
      private akka.mobile.protocol.RemoteProtocol.LifeCycleType lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
      public boolean hasLifeCycle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public akka.mobile.protocol.RemoteProtocol.LifeCycleType getLifeCycle() {
        return lifeCycle_;
      }
      public Builder setLifeCycle(akka.mobile.protocol.RemoteProtocol.LifeCycleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        lifeCycle_ = value;
        
        return this;
      }
      public Builder clearLifeCycle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lifeCycle_ = akka.mobile.protocol.RemoteProtocol.LifeCycleType.PERMANENT;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LifeCycleProtocol)
    }
    
    static {
      defaultInstance = new LifeCycleProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LifeCycleProtocol)
  }
  
  public interface AddressProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string hostname = 1;
    boolean hasHostname();
    String getHostname();
    
    // required uint32 port = 2;
    boolean hasPort();
    int getPort();
  }
  public static final class AddressProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements AddressProtocolOrBuilder {
    // Use AddressProtocol.newBuilder() to construct.
    private AddressProtocol(Builder builder) {
      super(builder);
    }
    private AddressProtocol(boolean noInit) {}
    
    private static final AddressProtocol defaultInstance;
    public static AddressProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddressProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string hostname = 1;
    public static final int HOSTNAME_FIELD_NUMBER = 1;
    private java.lang.Object hostname_;
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hostname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPort() {
      return port_;
    }
    
    private void initFields() {
      hostname_ = "";
      port_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHostname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, port_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, port_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.AddressProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.AddressProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.AddressProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.AddressProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.AddressProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hostname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.AddressProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.AddressProtocol build() {
        akka.mobile.protocol.RemoteProtocol.AddressProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.AddressProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.AddressProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.AddressProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.AddressProtocol result = new akka.mobile.protocol.RemoteProtocol.AddressProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hostname_ = hostname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.AddressProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.AddressProtocol.getDefaultInstance()) return this;
        if (other.hasHostname()) {
          setHostname(other.getHostname());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHostname()) {
          
          return false;
        }
        if (!hasPort()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hostname_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string hostname = 1;
      private java.lang.Object hostname_ = "";
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHostname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hostname_ = value;
        
        return this;
      }
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hostname_ = getDefaultInstance().getHostname();
        
        return this;
      }
      void setHostname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        hostname_ = value;
        
      }
      
      // required uint32 port = 2;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AddressProtocol)
    }
    
    static {
      defaultInstance = new AddressProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AddressProtocol)
  }
  
  public interface ExceptionProtocolOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string classname = 1;
    boolean hasClassname();
    String getClassname();
    
    // required string message = 2;
    boolean hasMessage();
    String getMessage();
  }
  public static final class ExceptionProtocol extends
      com.google.protobuf.GeneratedMessageLite
      implements ExceptionProtocolOrBuilder {
    // Use ExceptionProtocol.newBuilder() to construct.
    private ExceptionProtocol(Builder builder) {
      super(builder);
    }
    private ExceptionProtocol(boolean noInit) {}
    
    private static final ExceptionProtocol defaultInstance;
    public static ExceptionProtocol getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExceptionProtocol getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string classname = 1;
    public static final int CLASSNAME_FIELD_NUMBER = 1;
    private java.lang.Object classname_;
    public boolean hasClassname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getClassname() {
      java.lang.Object ref = classname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          classname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClassnameBytes() {
      java.lang.Object ref = classname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        classname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      classname_ = "";
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasClassname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClassnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClassnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.mobile.protocol.RemoteProtocol.ExceptionProtocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.mobile.protocol.RemoteProtocol.ExceptionProtocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          akka.mobile.protocol.RemoteProtocol.ExceptionProtocol, Builder>
        implements akka.mobile.protocol.RemoteProtocol.ExceptionProtocolOrBuilder {
      // Construct using akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        classname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public akka.mobile.protocol.RemoteProtocol.ExceptionProtocol getDefaultInstanceForType() {
        return akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance();
      }
      
      public akka.mobile.protocol.RemoteProtocol.ExceptionProtocol build() {
        akka.mobile.protocol.RemoteProtocol.ExceptionProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private akka.mobile.protocol.RemoteProtocol.ExceptionProtocol buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        akka.mobile.protocol.RemoteProtocol.ExceptionProtocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public akka.mobile.protocol.RemoteProtocol.ExceptionProtocol buildPartial() {
        akka.mobile.protocol.RemoteProtocol.ExceptionProtocol result = new akka.mobile.protocol.RemoteProtocol.ExceptionProtocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classname_ = classname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(akka.mobile.protocol.RemoteProtocol.ExceptionProtocol other) {
        if (other == akka.mobile.protocol.RemoteProtocol.ExceptionProtocol.getDefaultInstance()) return this;
        if (other.hasClassname()) {
          setClassname(other.getClassname());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasClassname()) {
          
          return false;
        }
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              classname_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string classname = 1;
      private java.lang.Object classname_ = "";
      public boolean hasClassname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getClassname() {
        java.lang.Object ref = classname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          classname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClassname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        classname_ = value;
        
        return this;
      }
      public Builder clearClassname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classname_ = getDefaultInstance().getClassname();
        
        return this;
      }
      void setClassname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        classname_ = value;
        
      }
      
      // required string message = 2;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        message_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:ExceptionProtocol)
    }
    
    static {
      defaultInstance = new ExceptionProtocol(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ExceptionProtocol)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
