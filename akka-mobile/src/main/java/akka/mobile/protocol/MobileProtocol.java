// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/protocol/MobileProtocol.proto

package akka.mobile.protocol;

public final class MobileProtocol {
    private MobileProtocol() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public enum ActorType
            implements com.google.protobuf.Internal.EnumLite {
        SCALA_ACTOR(0, 1),
        JAVA_ACTOR(1, 2),
        TYPED_ACTOR(2, 3),;

        public static final int SCALA_ACTOR_VALUE = 1;
        public static final int JAVA_ACTOR_VALUE = 2;
        public static final int TYPED_ACTOR_VALUE = 3;


        public final int getNumber() {
            return value;
        }

        public static ActorType valueOf(int value) {
            switch (value) {
                case 1:
                    return SCALA_ACTOR;
                case 2:
                    return JAVA_ACTOR;
                case 3:
                    return TYPED_ACTOR;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ActorType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<ActorType>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ActorType>() {
                    public ActorType findValueByNumber(int number) {
                        return ActorType.valueOf(number);
                    }
                };

        private final int value;

        private ActorType(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:ActorType)
    }

    public enum SerializationSchemeType
            implements com.google.protobuf.Internal.EnumLite {
        JAVA(0, 1),
        SBINARY(1, 2),
        SCALA_JSON(2, 3),
        JAVA_JSON(3, 4),
        PROTOBUF(4, 5),;

        public static final int JAVA_VALUE = 1;
        public static final int SBINARY_VALUE = 2;
        public static final int SCALA_JSON_VALUE = 3;
        public static final int JAVA_JSON_VALUE = 4;
        public static final int PROTOBUF_VALUE = 5;


        public final int getNumber() {
            return value;
        }

        public static SerializationSchemeType valueOf(int value) {
            switch (value) {
                case 1:
                    return JAVA;
                case 2:
                    return SBINARY;
                case 3:
                    return SCALA_JSON;
                case 4:
                    return JAVA_JSON;
                case 5:
                    return PROTOBUF;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<SerializationSchemeType>() {
                    public SerializationSchemeType findValueByNumber(int number) {
                        return SerializationSchemeType.valueOf(number);
                    }
                };

        private final int value;

        private SerializationSchemeType(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:SerializationSchemeType)
    }

    public enum LifeCycleType
            implements com.google.protobuf.Internal.EnumLite {
        PERMANENT(0, 1),
        TEMPORARY(1, 2),;

        public static final int PERMANENT_VALUE = 1;
        public static final int TEMPORARY_VALUE = 2;


        public final int getNumber() {
            return value;
        }

        public static LifeCycleType valueOf(int value) {
            switch (value) {
                case 1:
                    return PERMANENT;
                case 2:
                    return TEMPORARY;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<LifeCycleType>() {
                    public LifeCycleType findValueByNumber(int number) {
                        return LifeCycleType.valueOf(number);
                    }
                };

        private final int value;

        private LifeCycleType(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:LifeCycleType)
    }

    public enum AddressType
            implements com.google.protobuf.Internal.EnumLite {
        SERVICE_ADDRESS(0, 1),;

        public static final AddressType DEVICE_ADDRESS = SERVICE_ADDRESS;
        public static final int SERVICE_ADDRESS_VALUE = 1;
        public static final int DEVICE_ADDRESS_VALUE = 1;


        public final int getNumber() {
            return value;
        }

        public static AddressType valueOf(int value) {
            switch (value) {
                case 1:
                    return SERVICE_ADDRESS;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<AddressType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<AddressType>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AddressType>() {
                    public AddressType findValueByNumber(int number) {
                        return AddressType.valueOf(number);
                    }
                };

        private final int value;

        private AddressType(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:AddressType)
    }

    public interface AkkaMobileProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // optional .MobileMessageProtocol message = 1;
        boolean hasMessage();

        akka.mobile.protocol.MobileProtocol.MobileMessageProtocol getMessage();
    }

    public static final class AkkaMobileProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements AkkaMobileProtocolOrBuilder {
        // Use AkkaMobileProtocol.newBuilder() to construct.
        private AkkaMobileProtocol(Builder builder) {
            super(builder);
        }

        private AkkaMobileProtocol(boolean noInit) {
        }

        private static final AkkaMobileProtocol defaultInstance;

        public static AkkaMobileProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public AkkaMobileProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // optional .MobileMessageProtocol message = 1;
        public static final int MESSAGE_FIELD_NUMBER = 1;
        private akka.mobile.protocol.MobileProtocol.MobileMessageProtocol message_;

        public boolean hasMessage() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public akka.mobile.protocol.MobileProtocol.MobileMessageProtocol getMessage() {
            return message_;
        }

        private void initFields() {
            message_ = akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (hasMessage()) {
                if (!getMessage().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, message_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, message_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.AkkaMobileProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                message_ = akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol build() {
                akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol result = new akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.message_ = message_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.AkkaMobileProtocol.getDefaultInstance()) return this;
                if (other.hasMessage()) {
                    mergeMessage(other.getMessage());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (hasMessage()) {
                    if (!getMessage().isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.newBuilder();
                            if (hasMessage()) {
                                subBuilder.mergeFrom(getMessage());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setMessage(subBuilder.buildPartial());
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // optional .MobileMessageProtocol message = 1;
            private akka.mobile.protocol.MobileProtocol.MobileMessageProtocol message_ = akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance();

            public boolean hasMessage() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public akka.mobile.protocol.MobileProtocol.MobileMessageProtocol getMessage() {
                return message_;
            }

            public Builder setMessage(akka.mobile.protocol.MobileProtocol.MobileMessageProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                message_ = value;

                bitField0_ |= 0x00000001;
                return this;
            }

            public Builder setMessage(
                    akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.Builder builderForValue) {
                message_ = builderForValue.build();

                bitField0_ |= 0x00000001;
                return this;
            }

            public Builder mergeMessage(akka.mobile.protocol.MobileProtocol.MobileMessageProtocol value) {
                if (((bitField0_ & 0x00000001) == 0x00000001) &&
                        message_ != akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance()) {
                    message_ =
                            akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.newBuilder(message_).mergeFrom(value).buildPartial();
                } else {
                    message_ = value;
                }

                bitField0_ |= 0x00000001;
                return this;
            }

            public Builder clearMessage() {
                message_ = akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:AkkaMobileProtocol)
        }

        static {
            defaultInstance = new AkkaMobileProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:AkkaMobileProtocol)
    }

    public interface MobileMessageProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required .UuidProtocol uuid = 1;
        boolean hasUuid();

        akka.mobile.protocol.MobileProtocol.UuidProtocol getUuid();

        // required .ActorInfoProtocol actorInfo = 2;
        boolean hasActorInfo();

        akka.mobile.protocol.MobileProtocol.ActorInfoProtocol getActorInfo();

        // required bool oneWay = 3;
        boolean hasOneWay();

        boolean getOneWay();

        // optional .MessageProtocol message = 4;
        boolean hasMessage();

        akka.mobile.protocol.MobileProtocol.MessageProtocol getMessage();

        // optional .ExceptionProtocol exception = 5;
        boolean hasException();

        akka.mobile.protocol.MobileProtocol.ExceptionProtocol getException();

        // optional .UuidProtocol supervisorUuid = 6;
        boolean hasSupervisorUuid();

        akka.mobile.protocol.MobileProtocol.UuidProtocol getSupervisorUuid();

        // optional .RemoteActorRefProtocol sender = 7;
        boolean hasSender();

        akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol getSender();

        // repeated .MetadataEntryProtocol metadata = 8;
        java.util.List<akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol>
        getMetadataList();

        akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol getMetadata(int index);

        int getMetadataCount();

        // optional string cookie = 9;
        boolean hasCookie();

        String getCookie();
    }

    public static final class MobileMessageProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements MobileMessageProtocolOrBuilder {
        // Use MobileMessageProtocol.newBuilder() to construct.
        private MobileMessageProtocol(Builder builder) {
            super(builder);
        }

        private MobileMessageProtocol(boolean noInit) {
        }

        private static final MobileMessageProtocol defaultInstance;

        public static MobileMessageProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public MobileMessageProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required .UuidProtocol uuid = 1;
        public static final int UUID_FIELD_NUMBER = 1;
        private akka.mobile.protocol.MobileProtocol.UuidProtocol uuid_;

        public boolean hasUuid() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public akka.mobile.protocol.MobileProtocol.UuidProtocol getUuid() {
            return uuid_;
        }

        // required .ActorInfoProtocol actorInfo = 2;
        public static final int ACTORINFO_FIELD_NUMBER = 2;
        private akka.mobile.protocol.MobileProtocol.ActorInfoProtocol actorInfo_;

        public boolean hasActorInfo() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public akka.mobile.protocol.MobileProtocol.ActorInfoProtocol getActorInfo() {
            return actorInfo_;
        }

        // required bool oneWay = 3;
        public static final int ONEWAY_FIELD_NUMBER = 3;
        private boolean oneWay_;

        public boolean hasOneWay() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public boolean getOneWay() {
            return oneWay_;
        }

        // optional .MessageProtocol message = 4;
        public static final int MESSAGE_FIELD_NUMBER = 4;
        private akka.mobile.protocol.MobileProtocol.MessageProtocol message_;

        public boolean hasMessage() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        public akka.mobile.protocol.MobileProtocol.MessageProtocol getMessage() {
            return message_;
        }

        // optional .ExceptionProtocol exception = 5;
        public static final int EXCEPTION_FIELD_NUMBER = 5;
        private akka.mobile.protocol.MobileProtocol.ExceptionProtocol exception_;

        public boolean hasException() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        public akka.mobile.protocol.MobileProtocol.ExceptionProtocol getException() {
            return exception_;
        }

        // optional .UuidProtocol supervisorUuid = 6;
        public static final int SUPERVISORUUID_FIELD_NUMBER = 6;
        private akka.mobile.protocol.MobileProtocol.UuidProtocol supervisorUuid_;

        public boolean hasSupervisorUuid() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        public akka.mobile.protocol.MobileProtocol.UuidProtocol getSupervisorUuid() {
            return supervisorUuid_;
        }

        // optional .RemoteActorRefProtocol sender = 7;
        public static final int SENDER_FIELD_NUMBER = 7;
        private akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol sender_;

        public boolean hasSender() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        public akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol getSender() {
            return sender_;
        }

        // repeated .MetadataEntryProtocol metadata = 8;
        public static final int METADATA_FIELD_NUMBER = 8;
        private java.util.List<akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol> metadata_;

        public java.util.List<akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol> getMetadataList() {
            return metadata_;
        }

        public java.util.List<? extends akka.mobile.protocol.MobileProtocol.MetadataEntryProtocolOrBuilder>
        getMetadataOrBuilderList() {
            return metadata_;
        }

        public int getMetadataCount() {
            return metadata_.size();
        }

        public akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol getMetadata(int index) {
            return metadata_.get(index);
        }

        public akka.mobile.protocol.MobileProtocol.MetadataEntryProtocolOrBuilder getMetadataOrBuilder(
                int index) {
            return metadata_.get(index);
        }

        // optional string cookie = 9;
        public static final int COOKIE_FIELD_NUMBER = 9;
        private java.lang.Object cookie_;

        public boolean hasCookie() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        public String getCookie() {
            java.lang.Object ref = cookie_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    cookie_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getCookieBytes() {
            java.lang.Object ref = cookie_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                cookie_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            uuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();
            actorInfo_ = akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance();
            oneWay_ = false;
            message_ = akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance();
            exception_ = akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance();
            supervisorUuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();
            sender_ = akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance();
            metadata_ = java.util.Collections.emptyList();
            cookie_ = "";
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasUuid()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasActorInfo()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasOneWay()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getUuid().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getActorInfo().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (hasMessage()) {
                if (!getMessage().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasException()) {
                if (!getException().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasSupervisorUuid()) {
                if (!getSupervisorUuid().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasSender()) {
                if (!getSender().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            for (int i = 0; i < getMetadataCount(); i++) {
                if (!getMetadata(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, uuid_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, actorInfo_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, oneWay_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, message_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, exception_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeMessage(6, supervisorUuid_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeMessage(7, sender_);
            }
            for (int i = 0; i < metadata_.size(); i++) {
                output.writeMessage(8, metadata_.get(i));
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeBytes(9, getCookieBytes());
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, uuid_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, actorInfo_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, oneWay_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, message_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, exception_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, supervisorUuid_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, sender_);
            }
            for (int i = 0; i < metadata_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, metadata_.get(i));
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(9, getCookieBytes());
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MobileMessageProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.MobileMessageProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.MobileMessageProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.MobileMessageProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                uuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000001);
                actorInfo_ = akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000002);
                oneWay_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                message_ = akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000008);
                exception_ = akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000010);
                supervisorUuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000020);
                sender_ = akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000040);
                metadata_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000080);
                cookie_ = "";
                bitField0_ = (bitField0_ & ~0x00000100);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.MobileMessageProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.MobileMessageProtocol build() {
                akka.mobile.protocol.MobileProtocol.MobileMessageProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.MobileMessageProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.MobileMessageProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.MobileMessageProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.MobileMessageProtocol result = new akka.mobile.protocol.MobileProtocol.MobileMessageProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.uuid_ = uuid_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.actorInfo_ = actorInfo_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.oneWay_ = oneWay_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.message_ = message_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.exception_ = exception_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.supervisorUuid_ = supervisorUuid_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.sender_ = sender_;
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    metadata_ = java.util.Collections.unmodifiableList(metadata_);
                    bitField0_ = (bitField0_ & ~0x00000080);
                }
                result.metadata_ = metadata_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.cookie_ = cookie_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.MobileMessageProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.MobileMessageProtocol.getDefaultInstance())
                    return this;
                if (other.hasUuid()) {
                    mergeUuid(other.getUuid());
                }
                if (other.hasActorInfo()) {
                    mergeActorInfo(other.getActorInfo());
                }
                if (other.hasOneWay()) {
                    setOneWay(other.getOneWay());
                }
                if (other.hasMessage()) {
                    mergeMessage(other.getMessage());
                }
                if (other.hasException()) {
                    mergeException(other.getException());
                }
                if (other.hasSupervisorUuid()) {
                    mergeSupervisorUuid(other.getSupervisorUuid());
                }
                if (other.hasSender()) {
                    mergeSender(other.getSender());
                }
                if (!other.metadata_.isEmpty()) {
                    if (metadata_.isEmpty()) {
                        metadata_ = other.metadata_;
                        bitField0_ = (bitField0_ & ~0x00000080);
                    } else {
                        ensureMetadataIsMutable();
                        metadata_.addAll(other.metadata_);
                    }

                }
                if (other.hasCookie()) {
                    setCookie(other.getCookie());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasUuid()) {

                    return false;
                }
                if (!hasActorInfo()) {

                    return false;
                }
                if (!hasOneWay()) {

                    return false;
                }
                if (!getUuid().isInitialized()) {

                    return false;
                }
                if (!getActorInfo().isInitialized()) {

                    return false;
                }
                if (hasMessage()) {
                    if (!getMessage().isInitialized()) {

                        return false;
                    }
                }
                if (hasException()) {
                    if (!getException().isInitialized()) {

                        return false;
                    }
                }
                if (hasSupervisorUuid()) {
                    if (!getSupervisorUuid().isInitialized()) {

                        return false;
                    }
                }
                if (hasSender()) {
                    if (!getSender().isInitialized()) {

                        return false;
                    }
                }
                for (int i = 0; i < getMetadataCount(); i++) {
                    if (!getMetadata(i).isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            akka.mobile.protocol.MobileProtocol.UuidProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.UuidProtocol.newBuilder();
                            if (hasUuid()) {
                                subBuilder.mergeFrom(getUuid());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setUuid(subBuilder.buildPartial());
                            break;
                        }
                        case 18: {
                            akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.newBuilder();
                            if (hasActorInfo()) {
                                subBuilder.mergeFrom(getActorInfo());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setActorInfo(subBuilder.buildPartial());
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            oneWay_ = input.readBool();
                            break;
                        }
                        case 34: {
                            akka.mobile.protocol.MobileProtocol.MessageProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.MessageProtocol.newBuilder();
                            if (hasMessage()) {
                                subBuilder.mergeFrom(getMessage());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setMessage(subBuilder.buildPartial());
                            break;
                        }
                        case 42: {
                            akka.mobile.protocol.MobileProtocol.ExceptionProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.ExceptionProtocol.newBuilder();
                            if (hasException()) {
                                subBuilder.mergeFrom(getException());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setException(subBuilder.buildPartial());
                            break;
                        }
                        case 50: {
                            akka.mobile.protocol.MobileProtocol.UuidProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.UuidProtocol.newBuilder();
                            if (hasSupervisorUuid()) {
                                subBuilder.mergeFrom(getSupervisorUuid());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setSupervisorUuid(subBuilder.buildPartial());
                            break;
                        }
                        case 58: {
                            akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.newBuilder();
                            if (hasSender()) {
                                subBuilder.mergeFrom(getSender());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setSender(subBuilder.buildPartial());
                            break;
                        }
                        case 66: {
                            akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.newBuilder();
                            input.readMessage(subBuilder, extensionRegistry);
                            addMetadata(subBuilder.buildPartial());
                            break;
                        }
                        case 74: {
                            bitField0_ |= 0x00000100;
                            cookie_ = input.readBytes();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required .UuidProtocol uuid = 1;
            private akka.mobile.protocol.MobileProtocol.UuidProtocol uuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();

            public boolean hasUuid() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public akka.mobile.protocol.MobileProtocol.UuidProtocol getUuid() {
                return uuid_;
            }

            public Builder setUuid(akka.mobile.protocol.MobileProtocol.UuidProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                uuid_ = value;

                bitField0_ |= 0x00000001;
                return this;
            }

            public Builder setUuid(
                    akka.mobile.protocol.MobileProtocol.UuidProtocol.Builder builderForValue) {
                uuid_ = builderForValue.build();

                bitField0_ |= 0x00000001;
                return this;
            }

            public Builder mergeUuid(akka.mobile.protocol.MobileProtocol.UuidProtocol value) {
                if (((bitField0_ & 0x00000001) == 0x00000001) &&
                        uuid_ != akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance()) {
                    uuid_ =
                            akka.mobile.protocol.MobileProtocol.UuidProtocol.newBuilder(uuid_).mergeFrom(value).buildPartial();
                } else {
                    uuid_ = value;
                }

                bitField0_ |= 0x00000001;
                return this;
            }

            public Builder clearUuid() {
                uuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            // required .ActorInfoProtocol actorInfo = 2;
            private akka.mobile.protocol.MobileProtocol.ActorInfoProtocol actorInfo_ = akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance();

            public boolean hasActorInfo() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public akka.mobile.protocol.MobileProtocol.ActorInfoProtocol getActorInfo() {
                return actorInfo_;
            }

            public Builder setActorInfo(akka.mobile.protocol.MobileProtocol.ActorInfoProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                actorInfo_ = value;

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder setActorInfo(
                    akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.Builder builderForValue) {
                actorInfo_ = builderForValue.build();

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder mergeActorInfo(akka.mobile.protocol.MobileProtocol.ActorInfoProtocol value) {
                if (((bitField0_ & 0x00000002) == 0x00000002) &&
                        actorInfo_ != akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance()) {
                    actorInfo_ =
                            akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.newBuilder(actorInfo_).mergeFrom(value).buildPartial();
                } else {
                    actorInfo_ = value;
                }

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder clearActorInfo() {
                actorInfo_ = akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            // required bool oneWay = 3;
            private boolean oneWay_;

            public boolean hasOneWay() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            public boolean getOneWay() {
                return oneWay_;
            }

            public Builder setOneWay(boolean value) {
                bitField0_ |= 0x00000004;
                oneWay_ = value;

                return this;
            }

            public Builder clearOneWay() {
                bitField0_ = (bitField0_ & ~0x00000004);
                oneWay_ = false;

                return this;
            }

            // optional .MessageProtocol message = 4;
            private akka.mobile.protocol.MobileProtocol.MessageProtocol message_ = akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance();

            public boolean hasMessage() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            public akka.mobile.protocol.MobileProtocol.MessageProtocol getMessage() {
                return message_;
            }

            public Builder setMessage(akka.mobile.protocol.MobileProtocol.MessageProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                message_ = value;

                bitField0_ |= 0x00000008;
                return this;
            }

            public Builder setMessage(
                    akka.mobile.protocol.MobileProtocol.MessageProtocol.Builder builderForValue) {
                message_ = builderForValue.build();

                bitField0_ |= 0x00000008;
                return this;
            }

            public Builder mergeMessage(akka.mobile.protocol.MobileProtocol.MessageProtocol value) {
                if (((bitField0_ & 0x00000008) == 0x00000008) &&
                        message_ != akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance()) {
                    message_ =
                            akka.mobile.protocol.MobileProtocol.MessageProtocol.newBuilder(message_).mergeFrom(value).buildPartial();
                } else {
                    message_ = value;
                }

                bitField0_ |= 0x00000008;
                return this;
            }

            public Builder clearMessage() {
                message_ = akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            // optional .ExceptionProtocol exception = 5;
            private akka.mobile.protocol.MobileProtocol.ExceptionProtocol exception_ = akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance();

            public boolean hasException() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            public akka.mobile.protocol.MobileProtocol.ExceptionProtocol getException() {
                return exception_;
            }

            public Builder setException(akka.mobile.protocol.MobileProtocol.ExceptionProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                exception_ = value;

                bitField0_ |= 0x00000010;
                return this;
            }

            public Builder setException(
                    akka.mobile.protocol.MobileProtocol.ExceptionProtocol.Builder builderForValue) {
                exception_ = builderForValue.build();

                bitField0_ |= 0x00000010;
                return this;
            }

            public Builder mergeException(akka.mobile.protocol.MobileProtocol.ExceptionProtocol value) {
                if (((bitField0_ & 0x00000010) == 0x00000010) &&
                        exception_ != akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance()) {
                    exception_ =
                            akka.mobile.protocol.MobileProtocol.ExceptionProtocol.newBuilder(exception_).mergeFrom(value).buildPartial();
                } else {
                    exception_ = value;
                }

                bitField0_ |= 0x00000010;
                return this;
            }

            public Builder clearException() {
                exception_ = akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            // optional .UuidProtocol supervisorUuid = 6;
            private akka.mobile.protocol.MobileProtocol.UuidProtocol supervisorUuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();

            public boolean hasSupervisorUuid() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            public akka.mobile.protocol.MobileProtocol.UuidProtocol getSupervisorUuid() {
                return supervisorUuid_;
            }

            public Builder setSupervisorUuid(akka.mobile.protocol.MobileProtocol.UuidProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                supervisorUuid_ = value;

                bitField0_ |= 0x00000020;
                return this;
            }

            public Builder setSupervisorUuid(
                    akka.mobile.protocol.MobileProtocol.UuidProtocol.Builder builderForValue) {
                supervisorUuid_ = builderForValue.build();

                bitField0_ |= 0x00000020;
                return this;
            }

            public Builder mergeSupervisorUuid(akka.mobile.protocol.MobileProtocol.UuidProtocol value) {
                if (((bitField0_ & 0x00000020) == 0x00000020) &&
                        supervisorUuid_ != akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance()) {
                    supervisorUuid_ =
                            akka.mobile.protocol.MobileProtocol.UuidProtocol.newBuilder(supervisorUuid_).mergeFrom(value).buildPartial();
                } else {
                    supervisorUuid_ = value;
                }

                bitField0_ |= 0x00000020;
                return this;
            }

            public Builder clearSupervisorUuid() {
                supervisorUuid_ = akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            // optional .RemoteActorRefProtocol sender = 7;
            private akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol sender_ = akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance();

            public boolean hasSender() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            public akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol getSender() {
                return sender_;
            }

            public Builder setSender(akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                sender_ = value;

                bitField0_ |= 0x00000040;
                return this;
            }

            public Builder setSender(
                    akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.Builder builderForValue) {
                sender_ = builderForValue.build();

                bitField0_ |= 0x00000040;
                return this;
            }

            public Builder mergeSender(akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol value) {
                if (((bitField0_ & 0x00000040) == 0x00000040) &&
                        sender_ != akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance()) {
                    sender_ =
                            akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.newBuilder(sender_).mergeFrom(value).buildPartial();
                } else {
                    sender_ = value;
                }

                bitField0_ |= 0x00000040;
                return this;
            }

            public Builder clearSender() {
                sender_ = akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000040);
                return this;
            }

            // repeated .MetadataEntryProtocol metadata = 8;
            private java.util.List<akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol> metadata_ =
                    java.util.Collections.emptyList();

            private void ensureMetadataIsMutable() {
                if (!((bitField0_ & 0x00000080) == 0x00000080)) {
                    metadata_ = new java.util.ArrayList<akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol>(metadata_);
                    bitField0_ |= 0x00000080;
                }
            }

            public java.util.List<akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol> getMetadataList() {
                return java.util.Collections.unmodifiableList(metadata_);
            }

            public int getMetadataCount() {
                return metadata_.size();
            }

            public akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol getMetadata(int index) {
                return metadata_.get(index);
            }

            public Builder setMetadata(
                    int index, akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureMetadataIsMutable();
                metadata_.set(index, value);

                return this;
            }

            public Builder setMetadata(
                    int index, akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.Builder builderForValue) {
                ensureMetadataIsMutable();
                metadata_.set(index, builderForValue.build());

                return this;
            }

            public Builder addMetadata(akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureMetadataIsMutable();
                metadata_.add(value);

                return this;
            }

            public Builder addMetadata(
                    int index, akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureMetadataIsMutable();
                metadata_.add(index, value);

                return this;
            }

            public Builder addMetadata(
                    akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.Builder builderForValue) {
                ensureMetadataIsMutable();
                metadata_.add(builderForValue.build());

                return this;
            }

            public Builder addMetadata(
                    int index, akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.Builder builderForValue) {
                ensureMetadataIsMutable();
                metadata_.add(index, builderForValue.build());

                return this;
            }

            public Builder addAllMetadata(
                    java.lang.Iterable<? extends akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol> values) {
                ensureMetadataIsMutable();
                super.addAll(values, metadata_);

                return this;
            }

            public Builder clearMetadata() {
                metadata_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000080);

                return this;
            }

            public Builder removeMetadata(int index) {
                ensureMetadataIsMutable();
                metadata_.remove(index);

                return this;
            }

            // optional string cookie = 9;
            private java.lang.Object cookie_ = "";

            public boolean hasCookie() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            public String getCookie() {
                java.lang.Object ref = cookie_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    cookie_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setCookie(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000100;
                cookie_ = value;

                return this;
            }

            public Builder clearCookie() {
                bitField0_ = (bitField0_ & ~0x00000100);
                cookie_ = getDefaultInstance().getCookie();

                return this;
            }

            void setCookie(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000100;
                cookie_ = value;

            }

            // @@protoc_insertion_point(builder_scope:MobileMessageProtocol)
        }

        static {
            defaultInstance = new MobileMessageProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:MobileMessageProtocol)
    }

    public interface RemoteActorRefProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required string classOrServiceName = 1;
        boolean hasClassOrServiceName();

        String getClassOrServiceName();

        // required .AddressProtocol homeAddress = 2;
        boolean hasHomeAddress();

        akka.mobile.protocol.MobileProtocol.AddressProtocol getHomeAddress();
    }

    public static final class RemoteActorRefProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements RemoteActorRefProtocolOrBuilder {
        // Use RemoteActorRefProtocol.newBuilder() to construct.
        private RemoteActorRefProtocol(Builder builder) {
            super(builder);
        }

        private RemoteActorRefProtocol(boolean noInit) {
        }

        private static final RemoteActorRefProtocol defaultInstance;

        public static RemoteActorRefProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public RemoteActorRefProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required string classOrServiceName = 1;
        public static final int CLASSORSERVICENAME_FIELD_NUMBER = 1;
        private java.lang.Object classOrServiceName_;

        public boolean hasClassOrServiceName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public String getClassOrServiceName() {
            java.lang.Object ref = classOrServiceName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    classOrServiceName_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getClassOrServiceNameBytes() {
            java.lang.Object ref = classOrServiceName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                classOrServiceName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required .AddressProtocol homeAddress = 2;
        public static final int HOMEADDRESS_FIELD_NUMBER = 2;
        private akka.mobile.protocol.MobileProtocol.AddressProtocol homeAddress_;

        public boolean hasHomeAddress() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public akka.mobile.protocol.MobileProtocol.AddressProtocol getHomeAddress() {
            return homeAddress_;
        }

        private void initFields() {
            classOrServiceName_ = "";
            homeAddress_ = akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasClassOrServiceName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasHomeAddress()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!getHomeAddress().isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getClassOrServiceNameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, homeAddress_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getClassOrServiceNameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, homeAddress_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                classOrServiceName_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                homeAddress_ = akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol build() {
                akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol result = new akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.classOrServiceName_ = classOrServiceName_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.homeAddress_ = homeAddress_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.RemoteActorRefProtocol.getDefaultInstance())
                    return this;
                if (other.hasClassOrServiceName()) {
                    setClassOrServiceName(other.getClassOrServiceName());
                }
                if (other.hasHomeAddress()) {
                    mergeHomeAddress(other.getHomeAddress());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasClassOrServiceName()) {

                    return false;
                }
                if (!hasHomeAddress()) {

                    return false;
                }
                if (!getHomeAddress().isInitialized()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            classOrServiceName_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            akka.mobile.protocol.MobileProtocol.AddressProtocol.Builder subBuilder = akka.mobile.protocol.MobileProtocol.AddressProtocol.newBuilder();
                            if (hasHomeAddress()) {
                                subBuilder.mergeFrom(getHomeAddress());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setHomeAddress(subBuilder.buildPartial());
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required string classOrServiceName = 1;
            private java.lang.Object classOrServiceName_ = "";

            public boolean hasClassOrServiceName() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public String getClassOrServiceName() {
                java.lang.Object ref = classOrServiceName_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    classOrServiceName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setClassOrServiceName(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                classOrServiceName_ = value;

                return this;
            }

            public Builder clearClassOrServiceName() {
                bitField0_ = (bitField0_ & ~0x00000001);
                classOrServiceName_ = getDefaultInstance().getClassOrServiceName();

                return this;
            }

            void setClassOrServiceName(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000001;
                classOrServiceName_ = value;

            }

            // required .AddressProtocol homeAddress = 2;
            private akka.mobile.protocol.MobileProtocol.AddressProtocol homeAddress_ = akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance();

            public boolean hasHomeAddress() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public akka.mobile.protocol.MobileProtocol.AddressProtocol getHomeAddress() {
                return homeAddress_;
            }

            public Builder setHomeAddress(akka.mobile.protocol.MobileProtocol.AddressProtocol value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                homeAddress_ = value;

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder setHomeAddress(
                    akka.mobile.protocol.MobileProtocol.AddressProtocol.Builder builderForValue) {
                homeAddress_ = builderForValue.build();

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder mergeHomeAddress(akka.mobile.protocol.MobileProtocol.AddressProtocol value) {
                if (((bitField0_ & 0x00000002) == 0x00000002) &&
                        homeAddress_ != akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance()) {
                    homeAddress_ =
                            akka.mobile.protocol.MobileProtocol.AddressProtocol.newBuilder(homeAddress_).mergeFrom(value).buildPartial();
                } else {
                    homeAddress_ = value;
                }

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder clearHomeAddress() {
                homeAddress_ = akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:RemoteActorRefProtocol)
        }

        static {
            defaultInstance = new RemoteActorRefProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:RemoteActorRefProtocol)
    }

    public interface MessageProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required .SerializationSchemeType serializationScheme = 1;
        boolean hasSerializationScheme();

        akka.mobile.protocol.MobileProtocol.SerializationSchemeType getSerializationScheme();

        // required bytes message = 2;
        boolean hasMessage();

        com.google.protobuf.ByteString getMessage();

        // optional bytes messageManifest = 3;
        boolean hasMessageManifest();

        com.google.protobuf.ByteString getMessageManifest();
    }

    public static final class MessageProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements MessageProtocolOrBuilder {
        // Use MessageProtocol.newBuilder() to construct.
        private MessageProtocol(Builder builder) {
            super(builder);
        }

        private MessageProtocol(boolean noInit) {
        }

        private static final MessageProtocol defaultInstance;

        public static MessageProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public MessageProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required .SerializationSchemeType serializationScheme = 1;
        public static final int SERIALIZATIONSCHEME_FIELD_NUMBER = 1;
        private akka.mobile.protocol.MobileProtocol.SerializationSchemeType serializationScheme_;

        public boolean hasSerializationScheme() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public akka.mobile.protocol.MobileProtocol.SerializationSchemeType getSerializationScheme() {
            return serializationScheme_;
        }

        // required bytes message = 2;
        public static final int MESSAGE_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString message_;

        public boolean hasMessage() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public com.google.protobuf.ByteString getMessage() {
            return message_;
        }

        // optional bytes messageManifest = 3;
        public static final int MESSAGEMANIFEST_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString messageManifest_;

        public boolean hasMessageManifest() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public com.google.protobuf.ByteString getMessageManifest() {
            return messageManifest_;
        }

        private void initFields() {
            serializationScheme_ = akka.mobile.protocol.MobileProtocol.SerializationSchemeType.JAVA;
            message_ = com.google.protobuf.ByteString.EMPTY;
            messageManifest_ = com.google.protobuf.ByteString.EMPTY;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasSerializationScheme()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMessage()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, serializationScheme_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, message_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, messageManifest_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, serializationScheme_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, message_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, messageManifest_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MessageProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.MessageProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.MessageProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.MessageProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.MessageProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                serializationScheme_ = akka.mobile.protocol.MobileProtocol.SerializationSchemeType.JAVA;
                bitField0_ = (bitField0_ & ~0x00000001);
                message_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                messageManifest_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.MessageProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.MessageProtocol build() {
                akka.mobile.protocol.MobileProtocol.MessageProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.MessageProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.MessageProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.MessageProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.MessageProtocol result = new akka.mobile.protocol.MobileProtocol.MessageProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.serializationScheme_ = serializationScheme_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.message_ = message_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.messageManifest_ = messageManifest_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.MessageProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.MessageProtocol.getDefaultInstance()) return this;
                if (other.hasSerializationScheme()) {
                    setSerializationScheme(other.getSerializationScheme());
                }
                if (other.hasMessage()) {
                    setMessage(other.getMessage());
                }
                if (other.hasMessageManifest()) {
                    setMessageManifest(other.getMessageManifest());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasSerializationScheme()) {

                    return false;
                }
                if (!hasMessage()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            akka.mobile.protocol.MobileProtocol.SerializationSchemeType value = akka.mobile.protocol.MobileProtocol.SerializationSchemeType.valueOf(rawValue);
                            if (value != null) {
                                bitField0_ |= 0x00000001;
                                serializationScheme_ = value;
                            }
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            message_ = input.readBytes();
                            break;
                        }
                        case 26: {
                            bitField0_ |= 0x00000004;
                            messageManifest_ = input.readBytes();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required .SerializationSchemeType serializationScheme = 1;
            private akka.mobile.protocol.MobileProtocol.SerializationSchemeType serializationScheme_ = akka.mobile.protocol.MobileProtocol.SerializationSchemeType.JAVA;

            public boolean hasSerializationScheme() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public akka.mobile.protocol.MobileProtocol.SerializationSchemeType getSerializationScheme() {
                return serializationScheme_;
            }

            public Builder setSerializationScheme(akka.mobile.protocol.MobileProtocol.SerializationSchemeType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                serializationScheme_ = value;

                return this;
            }

            public Builder clearSerializationScheme() {
                bitField0_ = (bitField0_ & ~0x00000001);
                serializationScheme_ = akka.mobile.protocol.MobileProtocol.SerializationSchemeType.JAVA;

                return this;
            }

            // required bytes message = 2;
            private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;

            public boolean hasMessage() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public com.google.protobuf.ByteString getMessage() {
                return message_;
            }

            public Builder setMessage(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                message_ = value;

                return this;
            }

            public Builder clearMessage() {
                bitField0_ = (bitField0_ & ~0x00000002);
                message_ = getDefaultInstance().getMessage();

                return this;
            }

            // optional bytes messageManifest = 3;
            private com.google.protobuf.ByteString messageManifest_ = com.google.protobuf.ByteString.EMPTY;

            public boolean hasMessageManifest() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            public com.google.protobuf.ByteString getMessageManifest() {
                return messageManifest_;
            }

            public Builder setMessageManifest(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                messageManifest_ = value;

                return this;
            }

            public Builder clearMessageManifest() {
                bitField0_ = (bitField0_ & ~0x00000004);
                messageManifest_ = getDefaultInstance().getMessageManifest();

                return this;
            }

            // @@protoc_insertion_point(builder_scope:MessageProtocol)
        }

        static {
            defaultInstance = new MessageProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:MessageProtocol)
    }

    public interface ActorInfoProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required string target = 1;
        boolean hasTarget();

        String getTarget();

        // required .ActorType actorType = 2;
        boolean hasActorType();

        akka.mobile.protocol.MobileProtocol.ActorType getActorType();

        // optional string id = 3;
        boolean hasId();

        String getId();
    }

    public static final class ActorInfoProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements ActorInfoProtocolOrBuilder {
        // Use ActorInfoProtocol.newBuilder() to construct.
        private ActorInfoProtocol(Builder builder) {
            super(builder);
        }

        private ActorInfoProtocol(boolean noInit) {
        }

        private static final ActorInfoProtocol defaultInstance;

        public static ActorInfoProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public ActorInfoProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required string target = 1;
        public static final int TARGET_FIELD_NUMBER = 1;
        private java.lang.Object target_;

        public boolean hasTarget() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public String getTarget() {
            java.lang.Object ref = target_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    target_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getTargetBytes() {
            java.lang.Object ref = target_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                target_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required .ActorType actorType = 2;
        public static final int ACTORTYPE_FIELD_NUMBER = 2;
        private akka.mobile.protocol.MobileProtocol.ActorType actorType_;

        public boolean hasActorType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public akka.mobile.protocol.MobileProtocol.ActorType getActorType() {
            return actorType_;
        }

        // optional string id = 3;
        public static final int ID_FIELD_NUMBER = 3;
        private java.lang.Object id_;

        public boolean hasId() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public String getId() {
            java.lang.Object ref = id_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    id_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            target_ = "";
            actorType_ = akka.mobile.protocol.MobileProtocol.ActorType.SCALA_ACTOR;
            id_ = "";
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasTarget()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasActorType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getTargetBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, actorType_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, getIdBytes());
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getTargetBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, actorType_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, getIdBytes());
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ActorInfoProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.ActorInfoProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.ActorInfoProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.ActorInfoProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                target_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                actorType_ = akka.mobile.protocol.MobileProtocol.ActorType.SCALA_ACTOR;
                bitField0_ = (bitField0_ & ~0x00000002);
                id_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.ActorInfoProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.ActorInfoProtocol build() {
                akka.mobile.protocol.MobileProtocol.ActorInfoProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.ActorInfoProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.ActorInfoProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.ActorInfoProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.ActorInfoProtocol result = new akka.mobile.protocol.MobileProtocol.ActorInfoProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.target_ = target_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.actorType_ = actorType_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.id_ = id_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.ActorInfoProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.ActorInfoProtocol.getDefaultInstance()) return this;
                if (other.hasTarget()) {
                    setTarget(other.getTarget());
                }
                if (other.hasActorType()) {
                    setActorType(other.getActorType());
                }
                if (other.hasId()) {
                    setId(other.getId());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasTarget()) {

                    return false;
                }
                if (!hasActorType()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            target_ = input.readBytes();
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            akka.mobile.protocol.MobileProtocol.ActorType value = akka.mobile.protocol.MobileProtocol.ActorType.valueOf(rawValue);
                            if (value != null) {
                                bitField0_ |= 0x00000002;
                                actorType_ = value;
                            }
                            break;
                        }
                        case 26: {
                            bitField0_ |= 0x00000004;
                            id_ = input.readBytes();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required string target = 1;
            private java.lang.Object target_ = "";

            public boolean hasTarget() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public String getTarget() {
                java.lang.Object ref = target_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    target_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setTarget(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                target_ = value;

                return this;
            }

            public Builder clearTarget() {
                bitField0_ = (bitField0_ & ~0x00000001);
                target_ = getDefaultInstance().getTarget();

                return this;
            }

            void setTarget(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000001;
                target_ = value;

            }

            // required .ActorType actorType = 2;
            private akka.mobile.protocol.MobileProtocol.ActorType actorType_ = akka.mobile.protocol.MobileProtocol.ActorType.SCALA_ACTOR;

            public boolean hasActorType() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public akka.mobile.protocol.MobileProtocol.ActorType getActorType() {
                return actorType_;
            }

            public Builder setActorType(akka.mobile.protocol.MobileProtocol.ActorType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                actorType_ = value;

                return this;
            }

            public Builder clearActorType() {
                bitField0_ = (bitField0_ & ~0x00000002);
                actorType_ = akka.mobile.protocol.MobileProtocol.ActorType.SCALA_ACTOR;

                return this;
            }

            // optional string id = 3;
            private java.lang.Object id_ = "";

            public boolean hasId() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            public String getId() {
                java.lang.Object ref = id_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                id_ = value;

                return this;
            }

            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000004);
                id_ = getDefaultInstance().getId();

                return this;
            }

            void setId(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000004;
                id_ = value;

            }

            // @@protoc_insertion_point(builder_scope:ActorInfoProtocol)
        }

        static {
            defaultInstance = new ActorInfoProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ActorInfoProtocol)
    }

    public interface UuidProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required uint64 high = 1;
        boolean hasHigh();

        long getHigh();

        // required uint64 low = 2;
        boolean hasLow();

        long getLow();
    }

    public static final class UuidProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements UuidProtocolOrBuilder {
        // Use UuidProtocol.newBuilder() to construct.
        private UuidProtocol(Builder builder) {
            super(builder);
        }

        private UuidProtocol(boolean noInit) {
        }

        private static final UuidProtocol defaultInstance;

        public static UuidProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public UuidProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required uint64 high = 1;
        public static final int HIGH_FIELD_NUMBER = 1;
        private long high_;

        public boolean hasHigh() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public long getHigh() {
            return high_;
        }

        // required uint64 low = 2;
        public static final int LOW_FIELD_NUMBER = 2;
        private long low_;

        public boolean hasLow() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public long getLow() {
            return low_;
        }

        private void initFields() {
            high_ = 0L;
            low_ = 0L;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasHigh()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLow()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt64(1, high_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt64(2, low_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(1, high_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(2, low_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.UuidProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.UuidProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.UuidProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.UuidProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.UuidProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                high_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                low_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.UuidProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.UuidProtocol build() {
                akka.mobile.protocol.MobileProtocol.UuidProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.UuidProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.UuidProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.UuidProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.UuidProtocol result = new akka.mobile.protocol.MobileProtocol.UuidProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.high_ = high_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.low_ = low_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.UuidProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.UuidProtocol.getDefaultInstance()) return this;
                if (other.hasHigh()) {
                    setHigh(other.getHigh());
                }
                if (other.hasLow()) {
                    setLow(other.getLow());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasHigh()) {

                    return false;
                }
                if (!hasLow()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            high_ = input.readUInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            low_ = input.readUInt64();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required uint64 high = 1;
            private long high_;

            public boolean hasHigh() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public long getHigh() {
                return high_;
            }

            public Builder setHigh(long value) {
                bitField0_ |= 0x00000001;
                high_ = value;

                return this;
            }

            public Builder clearHigh() {
                bitField0_ = (bitField0_ & ~0x00000001);
                high_ = 0L;

                return this;
            }

            // required uint64 low = 2;
            private long low_;

            public boolean hasLow() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public long getLow() {
                return low_;
            }

            public Builder setLow(long value) {
                bitField0_ |= 0x00000002;
                low_ = value;

                return this;
            }

            public Builder clearLow() {
                bitField0_ = (bitField0_ & ~0x00000002);
                low_ = 0L;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:UuidProtocol)
        }

        static {
            defaultInstance = new UuidProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:UuidProtocol)
    }

    public interface MetadataEntryProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required string key = 1;
        boolean hasKey();

        String getKey();

        // required bytes value = 2;
        boolean hasValue();

        com.google.protobuf.ByteString getValue();
    }

    public static final class MetadataEntryProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements MetadataEntryProtocolOrBuilder {
        // Use MetadataEntryProtocol.newBuilder() to construct.
        private MetadataEntryProtocol(Builder builder) {
            super(builder);
        }

        private MetadataEntryProtocol(boolean noInit) {
        }

        private static final MetadataEntryProtocol defaultInstance;

        public static MetadataEntryProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public MetadataEntryProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required string key = 1;
        public static final int KEY_FIELD_NUMBER = 1;
        private java.lang.Object key_;

        public boolean hasKey() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public String getKey() {
            java.lang.Object ref = key_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    key_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getKeyBytes() {
            java.lang.Object ref = key_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                key_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required bytes value = 2;
        public static final int VALUE_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString value_;

        public boolean hasValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public com.google.protobuf.ByteString getValue() {
            return value_;
        }

        private void initFields() {
            key_ = "";
            value_ = com.google.protobuf.ByteString.EMPTY;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasKey()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasValue()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getKeyBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, value_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getKeyBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, value_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.MetadataEntryProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                key_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                value_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol build() {
                akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol result = new akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.key_ = key_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.value_ = value_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.MetadataEntryProtocol.getDefaultInstance())
                    return this;
                if (other.hasKey()) {
                    setKey(other.getKey());
                }
                if (other.hasValue()) {
                    setValue(other.getValue());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasKey()) {

                    return false;
                }
                if (!hasValue()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            key_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            value_ = input.readBytes();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required string key = 1;
            private java.lang.Object key_ = "";

            public boolean hasKey() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public String getKey() {
                java.lang.Object ref = key_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    key_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setKey(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                key_ = value;

                return this;
            }

            public Builder clearKey() {
                bitField0_ = (bitField0_ & ~0x00000001);
                key_ = getDefaultInstance().getKey();

                return this;
            }

            void setKey(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000001;
                key_ = value;

            }

            // required bytes value = 2;
            private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;

            public boolean hasValue() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public com.google.protobuf.ByteString getValue() {
                return value_;
            }

            public Builder setValue(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                value_ = value;

                return this;
            }

            public Builder clearValue() {
                bitField0_ = (bitField0_ & ~0x00000002);
                value_ = getDefaultInstance().getValue();

                return this;
            }

            // @@protoc_insertion_point(builder_scope:MetadataEntryProtocol)
        }

        static {
            defaultInstance = new MetadataEntryProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:MetadataEntryProtocol)
    }

    public interface LifeCycleProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required .LifeCycleType lifeCycle = 1;
        boolean hasLifeCycle();

        akka.mobile.protocol.MobileProtocol.LifeCycleType getLifeCycle();
    }

    public static final class LifeCycleProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements LifeCycleProtocolOrBuilder {
        // Use LifeCycleProtocol.newBuilder() to construct.
        private LifeCycleProtocol(Builder builder) {
            super(builder);
        }

        private LifeCycleProtocol(boolean noInit) {
        }

        private static final LifeCycleProtocol defaultInstance;

        public static LifeCycleProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public LifeCycleProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required .LifeCycleType lifeCycle = 1;
        public static final int LIFECYCLE_FIELD_NUMBER = 1;
        private akka.mobile.protocol.MobileProtocol.LifeCycleType lifeCycle_;

        public boolean hasLifeCycle() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public akka.mobile.protocol.MobileProtocol.LifeCycleType getLifeCycle() {
            return lifeCycle_;
        }

        private void initFields() {
            lifeCycle_ = akka.mobile.protocol.MobileProtocol.LifeCycleType.PERMANENT;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasLifeCycle()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, lifeCycle_.getNumber());
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, lifeCycle_.getNumber());
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.LifeCycleProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.LifeCycleProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.LifeCycleProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.LifeCycleProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.LifeCycleProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                lifeCycle_ = akka.mobile.protocol.MobileProtocol.LifeCycleType.PERMANENT;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.LifeCycleProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.LifeCycleProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.LifeCycleProtocol build() {
                akka.mobile.protocol.MobileProtocol.LifeCycleProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.LifeCycleProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.LifeCycleProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.LifeCycleProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.LifeCycleProtocol result = new akka.mobile.protocol.MobileProtocol.LifeCycleProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.lifeCycle_ = lifeCycle_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.LifeCycleProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.LifeCycleProtocol.getDefaultInstance()) return this;
                if (other.hasLifeCycle()) {
                    setLifeCycle(other.getLifeCycle());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasLifeCycle()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            akka.mobile.protocol.MobileProtocol.LifeCycleType value = akka.mobile.protocol.MobileProtocol.LifeCycleType.valueOf(rawValue);
                            if (value != null) {
                                bitField0_ |= 0x00000001;
                                lifeCycle_ = value;
                            }
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required .LifeCycleType lifeCycle = 1;
            private akka.mobile.protocol.MobileProtocol.LifeCycleType lifeCycle_ = akka.mobile.protocol.MobileProtocol.LifeCycleType.PERMANENT;

            public boolean hasLifeCycle() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public akka.mobile.protocol.MobileProtocol.LifeCycleType getLifeCycle() {
                return lifeCycle_;
            }

            public Builder setLifeCycle(akka.mobile.protocol.MobileProtocol.LifeCycleType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                lifeCycle_ = value;

                return this;
            }

            public Builder clearLifeCycle() {
                bitField0_ = (bitField0_ & ~0x00000001);
                lifeCycle_ = akka.mobile.protocol.MobileProtocol.LifeCycleType.PERMANENT;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:LifeCycleProtocol)
        }

        static {
            defaultInstance = new LifeCycleProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:LifeCycleProtocol)
    }

    public interface AddressProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required .AddressType type = 1;
        boolean hasType();

        akka.mobile.protocol.MobileProtocol.AddressType getType();

        // optional .ServiceAddress serviceAddress = 2;
        boolean hasServiceAddress();

        akka.mobile.protocol.MobileProtocol.ServiceAddress getServiceAddress();

        // optional .DeviceAddress deviceAddress = 3;
        boolean hasDeviceAddress();

        akka.mobile.protocol.MobileProtocol.DeviceAddress getDeviceAddress();
    }

    public static final class AddressProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements AddressProtocolOrBuilder {
        // Use AddressProtocol.newBuilder() to construct.
        private AddressProtocol(Builder builder) {
            super(builder);
        }

        private AddressProtocol(boolean noInit) {
        }

        private static final AddressProtocol defaultInstance;

        public static AddressProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public AddressProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required .AddressType type = 1;
        public static final int TYPE_FIELD_NUMBER = 1;
        private akka.mobile.protocol.MobileProtocol.AddressType type_;

        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public akka.mobile.protocol.MobileProtocol.AddressType getType() {
            return type_;
        }

        // optional .ServiceAddress serviceAddress = 2;
        public static final int SERVICEADDRESS_FIELD_NUMBER = 2;
        private akka.mobile.protocol.MobileProtocol.ServiceAddress serviceAddress_;

        public boolean hasServiceAddress() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public akka.mobile.protocol.MobileProtocol.ServiceAddress getServiceAddress() {
            return serviceAddress_;
        }

        // optional .DeviceAddress deviceAddress = 3;
        public static final int DEVICEADDRESS_FIELD_NUMBER = 3;
        private akka.mobile.protocol.MobileProtocol.DeviceAddress deviceAddress_;

        public boolean hasDeviceAddress() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        public akka.mobile.protocol.MobileProtocol.DeviceAddress getDeviceAddress() {
            return deviceAddress_;
        }

        private void initFields() {
            type_ = akka.mobile.protocol.MobileProtocol.AddressType.SERVICE_ADDRESS;
            serviceAddress_ = akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance();
            deviceAddress_ = akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (hasServiceAddress()) {
                if (!getServiceAddress().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasDeviceAddress()) {
                if (!getDeviceAddress().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, type_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, serviceAddress_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeMessage(3, deviceAddress_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, type_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, serviceAddress_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, deviceAddress_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.AddressProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.AddressProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.AddressProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.AddressProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.AddressProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                type_ = akka.mobile.protocol.MobileProtocol.AddressType.SERVICE_ADDRESS;
                bitField0_ = (bitField0_ & ~0x00000001);
                serviceAddress_ = akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000002);
                deviceAddress_ = akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.AddressProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.AddressProtocol build() {
                akka.mobile.protocol.MobileProtocol.AddressProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.AddressProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.AddressProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.AddressProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.AddressProtocol result = new akka.mobile.protocol.MobileProtocol.AddressProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.type_ = type_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.serviceAddress_ = serviceAddress_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.deviceAddress_ = deviceAddress_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.AddressProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.AddressProtocol.getDefaultInstance()) return this;
                if (other.hasType()) {
                    setType(other.getType());
                }
                if (other.hasServiceAddress()) {
                    mergeServiceAddress(other.getServiceAddress());
                }
                if (other.hasDeviceAddress()) {
                    mergeDeviceAddress(other.getDeviceAddress());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasType()) {

                    return false;
                }
                if (hasServiceAddress()) {
                    if (!getServiceAddress().isInitialized()) {

                        return false;
                    }
                }
                if (hasDeviceAddress()) {
                    if (!getDeviceAddress().isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            akka.mobile.protocol.MobileProtocol.AddressType value = akka.mobile.protocol.MobileProtocol.AddressType.valueOf(rawValue);
                            if (value != null) {
                                bitField0_ |= 0x00000001;
                                type_ = value;
                            }
                            break;
                        }
                        case 18: {
                            akka.mobile.protocol.MobileProtocol.ServiceAddress.Builder subBuilder = akka.mobile.protocol.MobileProtocol.ServiceAddress.newBuilder();
                            if (hasServiceAddress()) {
                                subBuilder.mergeFrom(getServiceAddress());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setServiceAddress(subBuilder.buildPartial());
                            break;
                        }
                        case 26: {
                            akka.mobile.protocol.MobileProtocol.DeviceAddress.Builder subBuilder = akka.mobile.protocol.MobileProtocol.DeviceAddress.newBuilder();
                            if (hasDeviceAddress()) {
                                subBuilder.mergeFrom(getDeviceAddress());
                            }
                            input.readMessage(subBuilder, extensionRegistry);
                            setDeviceAddress(subBuilder.buildPartial());
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required .AddressType type = 1;
            private akka.mobile.protocol.MobileProtocol.AddressType type_ = akka.mobile.protocol.MobileProtocol.AddressType.SERVICE_ADDRESS;

            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public akka.mobile.protocol.MobileProtocol.AddressType getType() {
                return type_;
            }

            public Builder setType(akka.mobile.protocol.MobileProtocol.AddressType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                type_ = value;

                return this;
            }

            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = akka.mobile.protocol.MobileProtocol.AddressType.SERVICE_ADDRESS;

                return this;
            }

            // optional .ServiceAddress serviceAddress = 2;
            private akka.mobile.protocol.MobileProtocol.ServiceAddress serviceAddress_ = akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance();

            public boolean hasServiceAddress() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public akka.mobile.protocol.MobileProtocol.ServiceAddress getServiceAddress() {
                return serviceAddress_;
            }

            public Builder setServiceAddress(akka.mobile.protocol.MobileProtocol.ServiceAddress value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                serviceAddress_ = value;

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder setServiceAddress(
                    akka.mobile.protocol.MobileProtocol.ServiceAddress.Builder builderForValue) {
                serviceAddress_ = builderForValue.build();

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder mergeServiceAddress(akka.mobile.protocol.MobileProtocol.ServiceAddress value) {
                if (((bitField0_ & 0x00000002) == 0x00000002) &&
                        serviceAddress_ != akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance()) {
                    serviceAddress_ =
                            akka.mobile.protocol.MobileProtocol.ServiceAddress.newBuilder(serviceAddress_).mergeFrom(value).buildPartial();
                } else {
                    serviceAddress_ = value;
                }

                bitField0_ |= 0x00000002;
                return this;
            }

            public Builder clearServiceAddress() {
                serviceAddress_ = akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            // optional .DeviceAddress deviceAddress = 3;
            private akka.mobile.protocol.MobileProtocol.DeviceAddress deviceAddress_ = akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance();

            public boolean hasDeviceAddress() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            public akka.mobile.protocol.MobileProtocol.DeviceAddress getDeviceAddress() {
                return deviceAddress_;
            }

            public Builder setDeviceAddress(akka.mobile.protocol.MobileProtocol.DeviceAddress value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                deviceAddress_ = value;

                bitField0_ |= 0x00000004;
                return this;
            }

            public Builder setDeviceAddress(
                    akka.mobile.protocol.MobileProtocol.DeviceAddress.Builder builderForValue) {
                deviceAddress_ = builderForValue.build();

                bitField0_ |= 0x00000004;
                return this;
            }

            public Builder mergeDeviceAddress(akka.mobile.protocol.MobileProtocol.DeviceAddress value) {
                if (((bitField0_ & 0x00000004) == 0x00000004) &&
                        deviceAddress_ != akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance()) {
                    deviceAddress_ =
                            akka.mobile.protocol.MobileProtocol.DeviceAddress.newBuilder(deviceAddress_).mergeFrom(value).buildPartial();
                } else {
                    deviceAddress_ = value;
                }

                bitField0_ |= 0x00000004;
                return this;
            }

            public Builder clearDeviceAddress() {
                deviceAddress_ = akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:AddressProtocol)
        }

        static {
            defaultInstance = new AddressProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:AddressProtocol)
    }

    public interface ServiceAddressOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required string hostname = 1;
        boolean hasHostname();

        String getHostname();

        // required uint32 port = 2;
        boolean hasPort();

        int getPort();
    }

    public static final class ServiceAddress extends
            com.google.protobuf.GeneratedMessageLite
            implements ServiceAddressOrBuilder {
        // Use ServiceAddress.newBuilder() to construct.
        private ServiceAddress(Builder builder) {
            super(builder);
        }

        private ServiceAddress(boolean noInit) {
        }

        private static final ServiceAddress defaultInstance;

        public static ServiceAddress getDefaultInstance() {
            return defaultInstance;
        }

        public ServiceAddress getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required string hostname = 1;
        public static final int HOSTNAME_FIELD_NUMBER = 1;
        private java.lang.Object hostname_;

        public boolean hasHostname() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public String getHostname() {
            java.lang.Object ref = hostname_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    hostname_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getHostnameBytes() {
            java.lang.Object ref = hostname_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                hostname_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required uint32 port = 2;
        public static final int PORT_FIELD_NUMBER = 2;
        private int port_;

        public boolean hasPort() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public int getPort() {
            return port_;
        }

        private void initFields() {
            hostname_ = "";
            port_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasHostname()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasPort()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getHostnameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, port_);
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getHostnameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, port_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ServiceAddress parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.ServiceAddress prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.ServiceAddress, Builder>
                implements akka.mobile.protocol.MobileProtocol.ServiceAddressOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.ServiceAddress.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                hostname_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                port_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.ServiceAddress getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.ServiceAddress build() {
                akka.mobile.protocol.MobileProtocol.ServiceAddress result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.ServiceAddress buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.ServiceAddress result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.ServiceAddress buildPartial() {
                akka.mobile.protocol.MobileProtocol.ServiceAddress result = new akka.mobile.protocol.MobileProtocol.ServiceAddress(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.hostname_ = hostname_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.port_ = port_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.ServiceAddress other) {
                if (other == akka.mobile.protocol.MobileProtocol.ServiceAddress.getDefaultInstance()) return this;
                if (other.hasHostname()) {
                    setHostname(other.getHostname());
                }
                if (other.hasPort()) {
                    setPort(other.getPort());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasHostname()) {

                    return false;
                }
                if (!hasPort()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            hostname_ = input.readBytes();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            port_ = input.readUInt32();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required string hostname = 1;
            private java.lang.Object hostname_ = "";

            public boolean hasHostname() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public String getHostname() {
                java.lang.Object ref = hostname_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    hostname_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setHostname(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                hostname_ = value;

                return this;
            }

            public Builder clearHostname() {
                bitField0_ = (bitField0_ & ~0x00000001);
                hostname_ = getDefaultInstance().getHostname();

                return this;
            }

            void setHostname(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000001;
                hostname_ = value;

            }

            // required uint32 port = 2;
            private int port_;

            public boolean hasPort() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public int getPort() {
                return port_;
            }

            public Builder setPort(int value) {
                bitField0_ |= 0x00000002;
                port_ = value;

                return this;
            }

            public Builder clearPort() {
                bitField0_ = (bitField0_ & ~0x00000002);
                port_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:ServiceAddress)
        }

        static {
            defaultInstance = new ServiceAddress(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ServiceAddress)
    }

    public interface DeviceAddressOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required string deviceID = 1;
        boolean hasDeviceID();

        String getDeviceID();

        // required string appId = 2;
        boolean hasAppId();

        String getAppId();
    }

    public static final class DeviceAddress extends
            com.google.protobuf.GeneratedMessageLite
            implements DeviceAddressOrBuilder {
        // Use DeviceAddress.newBuilder() to construct.
        private DeviceAddress(Builder builder) {
            super(builder);
        }

        private DeviceAddress(boolean noInit) {
        }

        private static final DeviceAddress defaultInstance;

        public static DeviceAddress getDefaultInstance() {
            return defaultInstance;
        }

        public DeviceAddress getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required string deviceID = 1;
        public static final int DEVICEID_FIELD_NUMBER = 1;
        private java.lang.Object deviceID_;

        public boolean hasDeviceID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public String getDeviceID() {
            java.lang.Object ref = deviceID_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    deviceID_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getDeviceIDBytes() {
            java.lang.Object ref = deviceID_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                deviceID_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required string appId = 2;
        public static final int APPID_FIELD_NUMBER = 2;
        private java.lang.Object appId_;

        public boolean hasAppId() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public String getAppId() {
            java.lang.Object ref = appId_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    appId_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getAppIdBytes() {
            java.lang.Object ref = appId_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                appId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            deviceID_ = "";
            appId_ = "";
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasDeviceID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasAppId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getDeviceIDBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getAppIdBytes());
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getDeviceIDBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getAppIdBytes());
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.DeviceAddress parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.DeviceAddress prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.DeviceAddress, Builder>
                implements akka.mobile.protocol.MobileProtocol.DeviceAddressOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.DeviceAddress.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                deviceID_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                appId_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.DeviceAddress getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.DeviceAddress build() {
                akka.mobile.protocol.MobileProtocol.DeviceAddress result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.DeviceAddress buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.DeviceAddress result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.DeviceAddress buildPartial() {
                akka.mobile.protocol.MobileProtocol.DeviceAddress result = new akka.mobile.protocol.MobileProtocol.DeviceAddress(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.deviceID_ = deviceID_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.appId_ = appId_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.DeviceAddress other) {
                if (other == akka.mobile.protocol.MobileProtocol.DeviceAddress.getDefaultInstance()) return this;
                if (other.hasDeviceID()) {
                    setDeviceID(other.getDeviceID());
                }
                if (other.hasAppId()) {
                    setAppId(other.getAppId());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasDeviceID()) {

                    return false;
                }
                if (!hasAppId()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            deviceID_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            appId_ = input.readBytes();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required string deviceID = 1;
            private java.lang.Object deviceID_ = "";

            public boolean hasDeviceID() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public String getDeviceID() {
                java.lang.Object ref = deviceID_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    deviceID_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setDeviceID(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                deviceID_ = value;

                return this;
            }

            public Builder clearDeviceID() {
                bitField0_ = (bitField0_ & ~0x00000001);
                deviceID_ = getDefaultInstance().getDeviceID();

                return this;
            }

            void setDeviceID(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000001;
                deviceID_ = value;

            }

            // required string appId = 2;
            private java.lang.Object appId_ = "";

            public boolean hasAppId() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public String getAppId() {
                java.lang.Object ref = appId_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    appId_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setAppId(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                appId_ = value;

                return this;
            }

            public Builder clearAppId() {
                bitField0_ = (bitField0_ & ~0x00000002);
                appId_ = getDefaultInstance().getAppId();

                return this;
            }

            void setAppId(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000002;
                appId_ = value;

            }

            // @@protoc_insertion_point(builder_scope:DeviceAddress)
        }

        static {
            defaultInstance = new DeviceAddress(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:DeviceAddress)
    }

    public interface ExceptionProtocolOrBuilder
            extends com.google.protobuf.MessageLiteOrBuilder {

        // required string classname = 1;
        boolean hasClassname();

        String getClassname();

        // required string message = 2;
        boolean hasMessage();

        String getMessage();
    }

    public static final class ExceptionProtocol extends
            com.google.protobuf.GeneratedMessageLite
            implements ExceptionProtocolOrBuilder {
        // Use ExceptionProtocol.newBuilder() to construct.
        private ExceptionProtocol(Builder builder) {
            super(builder);
        }

        private ExceptionProtocol(boolean noInit) {
        }

        private static final ExceptionProtocol defaultInstance;

        public static ExceptionProtocol getDefaultInstance() {
            return defaultInstance;
        }

        public ExceptionProtocol getDefaultInstanceForType() {
            return defaultInstance;
        }

        private int bitField0_;
        // required string classname = 1;
        public static final int CLASSNAME_FIELD_NUMBER = 1;
        private java.lang.Object classname_;

        public boolean hasClassname() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        public String getClassname() {
            java.lang.Object ref = classname_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    classname_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getClassnameBytes() {
            java.lang.Object ref = classname_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                classname_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        // required string message = 2;
        public static final int MESSAGE_FIELD_NUMBER = 2;
        private java.lang.Object message_;

        public boolean hasMessage() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        public String getMessage() {
            java.lang.Object ref = message_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                    message_ = s;
                }
                return s;
            }
        }

        private com.google.protobuf.ByteString getMessageBytes() {
            java.lang.Object ref = message_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8((String) ref);
                message_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            classname_ = "";
            message_ = "";
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasClassname()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMessage()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getClassnameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getMessageBytes());
            }
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getClassnameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getMessageBytes());
            }
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
                return builder.buildParsed();
            } else {
                return null;
            }
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
        }

        public static akka.mobile.protocol.MobileProtocol.ExceptionProtocol parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                    .buildParsed();
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(akka.mobile.protocol.MobileProtocol.ExceptionProtocol prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        akka.mobile.protocol.MobileProtocol.ExceptionProtocol, Builder>
                implements akka.mobile.protocol.MobileProtocol.ExceptionProtocolOrBuilder {
            // Construct using akka.mobile.protocol.MobileProtocol.ExceptionProtocol.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                classname_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                message_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public akka.mobile.protocol.MobileProtocol.ExceptionProtocol getDefaultInstanceForType() {
                return akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance();
            }

            public akka.mobile.protocol.MobileProtocol.ExceptionProtocol build() {
                akka.mobile.protocol.MobileProtocol.ExceptionProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            private akka.mobile.protocol.MobileProtocol.ExceptionProtocol buildParsed()
                    throws com.google.protobuf.InvalidProtocolBufferException {
                akka.mobile.protocol.MobileProtocol.ExceptionProtocol result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(
                            result).asInvalidProtocolBufferException();
                }
                return result;
            }

            public akka.mobile.protocol.MobileProtocol.ExceptionProtocol buildPartial() {
                akka.mobile.protocol.MobileProtocol.ExceptionProtocol result = new akka.mobile.protocol.MobileProtocol.ExceptionProtocol(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.classname_ = classname_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.message_ = message_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(akka.mobile.protocol.MobileProtocol.ExceptionProtocol other) {
                if (other == akka.mobile.protocol.MobileProtocol.ExceptionProtocol.getDefaultInstance()) return this;
                if (other.hasClassname()) {
                    setClassname(other.getClassname());
                }
                if (other.hasMessage()) {
                    setMessage(other.getMessage());
                }
                return this;
            }

            public final boolean isInitialized() {
                if (!hasClassname()) {

                    return false;
                }
                if (!hasMessage()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                while (true) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:

                            return this;
                        default: {
                            if (!parseUnknownField(input, extensionRegistry, tag)) {

                                return this;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            classname_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            message_ = input.readBytes();
                            break;
                        }
                    }
                }
            }

            private int bitField0_;

            // required string classname = 1;
            private java.lang.Object classname_ = "";

            public boolean hasClassname() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            public String getClassname() {
                java.lang.Object ref = classname_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    classname_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setClassname(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                classname_ = value;

                return this;
            }

            public Builder clearClassname() {
                bitField0_ = (bitField0_ & ~0x00000001);
                classname_ = getDefaultInstance().getClassname();

                return this;
            }

            void setClassname(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000001;
                classname_ = value;

            }

            // required string message = 2;
            private java.lang.Object message_ = "";

            public boolean hasMessage() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            public String getMessage() {
                java.lang.Object ref = message_;
                if (!(ref instanceof String)) {
                    String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
                    message_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            public Builder setMessage(String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                message_ = value;

                return this;
            }

            public Builder clearMessage() {
                bitField0_ = (bitField0_ & ~0x00000002);
                message_ = getDefaultInstance().getMessage();

                return this;
            }

            void setMessage(com.google.protobuf.ByteString value) {
                bitField0_ |= 0x00000002;
                message_ = value;

            }

            // @@protoc_insertion_point(builder_scope:ExceptionProtocol)
        }

        static {
            defaultInstance = new ExceptionProtocol(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:ExceptionProtocol)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
